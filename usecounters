# HG changeset patch
# Parent  a024a72641bf865aee9d3dfe65bc90545b257b51

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -2746,7 +2746,7 @@ pref("browser.firefox-view.feature-tour"
 // Number of times the user visited about:firefoxview
 pref("browser.firefox-view.view-count", 0);
 
-pref("browser.diagnosticCollection.enabled", true);
+// pref("browser.diagnosticCollection.enabled", true);
 
 // If the user has seen the pdf.js feature tour this value reflects the tour
 // message id, the id of the last screen they saw, and whether they completed the tour
diff --git a/dom/bindings/Codegen.py b/dom/bindings/Codegen.py
--- a/dom/bindings/Codegen.py
+++ b/dom/bindings/Codegen.py
@@ -9389,6 +9389,15 @@ class CGPerSignatureCall(CGThing):
 
             cgThings.append(CGGeneric(code))
 
+        # if True:
+        #     cgThings.append(
+        #     CGGeneric(
+        #         "if (StaticPrefs::dom_diagnosticCollection_enabled()) {\n"
+        #         'printf("We have pref set");\n'
+        #         "}\n"
+        #     )
+        #     )
+
         self.cgRoot = CGList(cgThings)
 
     def getArgumentNames(self):
@@ -14387,7 +14396,19 @@ class CGProxyUnwrap(CGAbstractMethod):
 
 
 MISSING_PROP_PREF = "dom.missing_prop_counters.enabled"
-
+DIAGNOSTIC_COLLECTION_PREF = "dom_diagnosticCollection_enabled"
+
+
+def diagnosticCollectionForDescriptor(desc):
+    return fill(
+        """
+        if (StaticPrefs::${pref}() && id.isAtom()) {
+          printf("Collection");
+        }
+
+        """,
+        pref=prefIdentifier(DIAGNOSTIC_COLLECTION_PREF),
+    )
 
 def missingPropUseCountersForDescriptor(desc):
     if not desc.needsMissingPropUseCounters:
@@ -14654,6 +14675,7 @@ class CGDOMJSProxyHandler_getOwnPropDesc
             getIndexed = ""
 
         missingPropUseCounters = missingPropUseCountersForDescriptor(self.descriptor)
+        diagnosticCollection = diagnosticCollectionForDescriptor(self.descriptor)
 
         if self.descriptor.supportsNamedProperties():
             operations = self.descriptor.operations
@@ -14723,6 +14745,7 @@ class CGDOMJSProxyHandler_getOwnPropDesc
             $*{xrayDecl}
             $*{getIndexed}
             $*{missingPropUseCounters}
+            $*{diagnosticCollection}
             JS::Rooted<JSObject*> expando(cx);
             if (${xrayCheck}(expando = GetExpandoObject(proxy))) {
               if (!JS_GetOwnPropertyDescriptorById(cx, expando, id, desc)) {
@@ -14741,6 +14764,7 @@ class CGDOMJSProxyHandler_getOwnPropDesc
             xrayCheck=xrayCheck,
             getIndexed=getIndexed,
             missingPropUseCounters=missingPropUseCounters,
+            diagnosticCollection=diagnosticCollection,
             namedGet=namedGet,
         )
 
@@ -15341,6 +15365,7 @@ class CGDOMJSProxyHandler_hasOwn(ClassMe
             named = "*bp = false;\n"
 
         missingPropUseCounters = missingPropUseCountersForDescriptor(self.descriptor)
+        diagnosticCollection = diagnosticCollectionForDescriptor(self.descriptor)
 
         return fill(
             """
@@ -15350,6 +15375,7 @@ class CGDOMJSProxyHandler_hasOwn(ClassMe
             $*{indexed}
 
             $*{missingPropUseCounters}
+            $*{diagnosticCollection}
             JS::Rooted<JSObject*> expando(cx, GetExpandoObject(proxy));
             if (expando) {
               bool b = true;
@@ -15366,6 +15392,7 @@ class CGDOMJSProxyHandler_hasOwn(ClassMe
             maybeCrossOrigin=maybeCrossOrigin,
             indexed=indexed,
             missingPropUseCounters=missingPropUseCounters,
+            diagnosticCollection=diagnosticCollection,
             named=named,
         )
 
@@ -18567,6 +18594,8 @@ class CGBindingRoot(CGThing):
                     bindingHeaders["mozilla/UseCounter.h"] = True
                 if d.needsMissingPropUseCounters:
                     bindingHeaders[prefHeader(MISSING_PROP_PREF)] = True
+                bindingHeaders[prefHeader(MISSING_PROP_PREF)] = True
+
             if d.interface.isSerializable():
                 bindingHeaders["mozilla/dom/StructuredCloneTags.h"] = True
             if d.wantsXrays:
diff --git a/modules/libpref/init/StaticPrefList.yaml b/modules/libpref/init/StaticPrefList.yaml
--- a/modules/libpref/init/StaticPrefList.yaml
+++ b/modules/libpref/init/StaticPrefList.yaml
@@ -2236,6 +2236,11 @@
   value: true
   mirror: always
 
+- name: dom.diagnosticCollection.enabled
+  type: bool
+  value: true
+  mirror: always
+
 # HTML <dialog> element
 - name: dom.dialog_element.enabled
   type: bool
