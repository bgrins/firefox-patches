diff --git a/browser/base/content/browser-urlbar.inc b/browser/base/content/browser-urlbar.inc
new file mode 100644
--- /dev/null
+++ b/browser/base/content/browser-urlbar.inc
@@ -0,0 +1,218 @@
+        <toolbaritem id="urlbar-container" flex="400" persist="width"
+                     removable="false"
+                     class="chromeclass-location" overflows="false">
+          <toolbartabstop/>
+          <hbox id="urlbar" flex="1"
+                context=""
+                focused="true"
+                pageproxystate="invalid">
+            <hbox id="urlbar-background"/>
+            <hbox id="urlbar-input-container"
+                  flex="1"
+                  pageproxystate="invalid">
+              <box id="remote-control-box"
+                   align="center"
+                   collapsed="true">
+                  <image id="remote-control-icon"/>
+              </box>
+              <box id="urlbar-search-button"
+                   class="chromeclass-toolbar-additional"/>
+              <!-- Use onclick instead of normal popup= syntax since the popup
+                   code fires onmousedown, and hence eats our favicon drag events. -->
+              <box id="tracking-protection-icon-container" align="center"
+                   role="button"
+                   onclick="gProtectionsHandler.handleProtectionsButtonEvent(event);"
+                   onkeypress="gProtectionsHandler.handleProtectionsButtonEvent(event);"
+                   onmouseover="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();"
+                   onfocus="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();"
+                   tooltip="tracking-protection-icon-tooltip">
+                <box id="tracking-protection-icon-box">
+                  <image id="tracking-protection-icon"/>
+                </box>
+                <tooltip id="tracking-protection-icon-tooltip">
+                  <description id="tracking-protection-icon-tooltip-label" class="tooltip-label"/>
+                </tooltip>
+              </box>
+              <box id="identity-box"
+                   pageproxystate="invalid"
+                   ondragstart="gIdentityHandler.onDragStart(event);">
+                <box id="identity-icon-box"
+                     role="button"
+                     align="center"
+                     data-l10n-id="urlbar-identity-button"
+                     class="identity-box-button"
+                     onclick="gIdentityHandler.handleIdentityButtonEvent(event); PageProxyClickHandler(event);"
+                     onkeypress="gIdentityHandler.handleIdentityButtonEvent(event);">
+                  <image id="identity-icon"/>
+                  <label id="identity-icon-label" class="plain" crop="center" flex="1"/>
+                </box>
+                <box id="identity-permission-box"
+                     data-l10n-id="urlbar-permissions-granted"
+                     role="button"
+                     align="center"
+                     class="identity-box-button"
+                     onclick="gPermissionPanel.handleIdentityButtonEvent(event); PageProxyClickHandler(event);"
+                     onkeypress="gPermissionPanel.handleIdentityButtonEvent(event);">
+                  <image id="permissions-granted-icon"/>
+                  <box style="pointer-events: none;">
+                      <image class="sharing-icon" id="webrtc-sharing-icon"/>
+                      <image class="sharing-icon geo-icon" id="geo-sharing-icon"/>
+                      <image class="sharing-icon xr-icon" id="xr-sharing-icon"/>
+                  </box>
+                  <box id="blocked-permissions-container" align="center">
+                    <image data-permission-id="geo" class="blocked-permission-icon geo-icon" role="button"
+                          data-l10n-id="urlbar-geolocation-blocked"/>
+                    <image data-permission-id="xr" class="blocked-permission-icon xr-icon" role="button"
+                          data-l10n-id="urlbar-xr-blocked"/>
+                    <image data-permission-id="desktop-notification" class="blocked-permission-icon desktop-notification-icon" role="button"
+                          data-l10n-id="urlbar-web-notifications-blocked"/>
+                    <image data-permission-id="camera" class="blocked-permission-icon camera-icon" role="button"
+                          data-l10n-id="urlbar-camera-blocked"/>
+                    <image data-permission-id="microphone" class="blocked-permission-icon microphone-icon" role="button"
+                          data-l10n-id="urlbar-microphone-blocked"/>
+                    <image data-permission-id="screen" class="blocked-permission-icon screen-icon" role="button"
+                          data-l10n-id="urlbar-screen-blocked"/>
+                    <image data-permission-id="persistent-storage" class="blocked-permission-icon persistent-storage-icon" role="button"
+                          data-l10n-id="urlbar-persistent-storage-blocked"/>
+                    <image data-permission-id="popup" class="blocked-permission-icon popup-icon" role="button"
+                          data-l10n-id="urlbar-popup-blocked"/>
+                    <image data-permission-id="autoplay-media" class="blocked-permission-icon autoplay-media-icon" role="button"
+                          data-l10n-id="urlbar-autoplay-media-blocked"/>
+                    <image data-permission-id="canvas" class="blocked-permission-icon canvas-icon" role="button"
+                          data-l10n-id="urlbar-canvas-blocked"/>
+                    <image data-permission-id="midi" class="blocked-permission-icon midi-icon" role="button"
+                          data-l10n-id="urlbar-midi-blocked"/>
+                    <image data-permission-id="install" class="blocked-permission-icon install-icon" role="button"
+                          data-l10n-id="urlbar-install-blocked"/>
+                  </box>
+                </box>
+                <box id="notification-popup-box"
+                     class="anchor-root"
+                     hidden="true"
+                     align="center">
+                  <image id="default-notification-icon" class="notification-anchor-icon" role="button"
+                         data-l10n-id="urlbar-default-notification-anchor"/>
+                  <image id="geo-notification-icon" class="notification-anchor-icon geo-icon" role="button"
+                         data-l10n-id="urlbar-geolocation-notification-anchor"/>
+                  <image id="xr-notification-icon" class="notification-anchor-icon xr-icon" role="button"
+                         data-l10n-id="urlbar-xr-notification-anchor"/>
+                  <image id="autoplay-media-notification-icon" class="notification-anchor-icon autoplay-media-icon" role="button"
+                         data-l10n-id="urlbar-autoplay-notification-anchor"/>
+                  <image id="addons-notification-icon" class="notification-anchor-icon install-icon" role="button"
+                         data-l10n-id="urlbar-addons-notification-anchor"/>
+                  <image id="canvas-notification-icon" class="notification-anchor-icon" role="button"
+                         data-l10n-id="urlbar-canvas-notification-anchor"/>
+                  <image id="indexedDB-notification-icon" class="notification-anchor-icon indexedDB-icon" role="button"
+                         data-l10n-id="urlbar-indexed-db-notification-anchor"/>
+                  <image id="password-notification-icon" class="notification-anchor-icon login-icon" role="button"
+                         data-l10n-id="urlbar-password-notification-anchor"/>
+                  <stack id="plugins-notification-icon" class="notification-anchor-icon" role="button" align="center" data-l10n-id="urlbar-plugins-notification-anchor">
+                    <image class="plugin-icon" />
+                    <image id="plugin-icon-badge" />
+                  </stack>
+                  <image id="web-notifications-notification-icon" class="notification-anchor-icon desktop-notification-icon" role="button"
+                         data-l10n-id="urlbar-web-notification-anchor"/>
+                  <image id="webRTC-shareDevices-notification-icon" class="notification-anchor-icon camera-icon" role="button"
+                         data-l10n-id="urlbar-web-rtc-share-devices-notification-anchor"/>
+                  <image id="webRTC-shareMicrophone-notification-icon" class="notification-anchor-icon microphone-icon" role="button"
+                         data-l10n-id="urlbar-web-rtc-share-microphone-notification-anchor"/>
+                  <image id="webRTC-shareScreen-notification-icon" class="notification-anchor-icon screen-icon" role="button"
+                         data-l10n-id="urlbar-web-rtc-share-screen-notification-anchor"/>
+                  <image id="servicesInstall-notification-icon" class="notification-anchor-icon service-icon" role="button"
+                         data-l10n-id="urlbar-services-notification-anchor"/>
+                  <image id="translate-notification-icon" class="notification-anchor-icon translation-icon" role="button"
+                         data-l10n-id="urlbar-translate-notification-anchor"/>
+                  <image id="translated-notification-icon" class="notification-anchor-icon translation-icon in-use" role="button"
+                         data-l10n-id="urlbar-translated-notification-anchor"/>
+                  <image id="eme-notification-icon" class="notification-anchor-icon drm-icon" role="button"
+                         data-l10n-id="urlbar-eme-notification-anchor"/>
+                  <image id="persistent-storage-notification-icon" class="notification-anchor-icon persistent-storage-icon" role="button"
+                         data-l10n-id="urlbar-persistent-storage-notification-anchor"/>
+                  <image id="midi-notification-icon" class="notification-anchor-icon midi-icon" role="button"
+                         data-l10n-id="urlbar-midi-notification-anchor"/>
+                  <image id="webauthn-notification-icon" class="notification-anchor-icon" role="button"
+                         data-l10n-id="urlbar-web-authn-anchor"/>
+                  <image id="storage-access-notification-icon" class="notification-anchor-icon storage-access-icon" role="button"
+                         data-l10n-id="urlbar-storage-access-anchor"/>
+                </box>
+              </box>
+              <box id="urlbar-label-box" align="center">
+                <label id="urlbar-label-switchtab" class="urlbar-label" data-l10n-id="urlbar-switch-to-tab"/>
+                <label id="urlbar-label-extension" class="urlbar-label" data-l10n-id="urlbar-extension"/>
+                <label id="urlbar-label-search-mode" class="urlbar-label"/>
+              </box>
+              <html:div id="urlbar-search-mode-indicator">
+                <html:span id="urlbar-search-mode-indicator-title"/>
+                <html:div id="urlbar-search-mode-indicator-close"
+                       class="close-button"
+                       role="button"/>
+              </html:div>
+              <moz-input-box tooltip="aHTMLTooltip"
+                             class="urlbar-input-box"
+                             flex="1"
+                             role="combobox"
+                             aria-owns="urlbar-results">
+                <html:input id="urlbar-scheme"
+                            required="required"/>
+                <html:input id="urlbar-input"
+                            anonid="input"
+                            aria-controls="urlbar-results"
+                            aria-autocomplete="both"
+                            inputmode="mozAwesomebar"
+                            data-l10n-id="urlbar-placeholder"
+                            data-l10n-attrs="placeholder"/>
+              </moz-input-box>
+              <image id="urlbar-go-button"
+                     class="urlbar-icon"
+                     onclick="gURLBar.handleCommand(event);"
+                     data-l10n-id="urlbar-go-button"/>
+              <hbox id="page-action-buttons" context="pageActionContextMenu">
+                <toolbartabstop/>
+                <hbox id="contextual-feature-recommendation" role="button" hidden="true">
+                  <hbox id="cfr-label-container">
+                    <label id="cfr-label"/>
+                  </hbox>
+                  <hbox id="cfr-button"
+                        role="presentation"
+                        class="urlbar-page-action urlbar-icon-wrapper">
+                    <image class="urlbar-icon"/>
+                  </hbox>
+                </hbox>
+                <hbox id="userContext-icons" hidden="true">
+                  <label id="userContext-label"/>
+                  <image id="userContext-indicator"/>
+                </hbox>
+                <hbox id="reader-mode-button"
+                      class="urlbar-page-action urlbar-icon-wrapper"
+                      role="button"
+                      hidden="true"
+                      tooltip="dynamic-shortcut-tooltip"
+                      onclick="AboutReaderParent.buttonClick(event);">
+                  <image id="reader-mode-button-icon"
+                         class="urlbar-icon"/>
+                </hbox>
+                <toolbarbutton id="urlbar-zoom-button"
+                       onclick="FullZoom.reset(); FullZoom.resetScalingZoom();"
+                       tooltip="dynamic-shortcut-tooltip"
+                       hidden="true"/>
+                <hbox id="pageActionButton"
+                      class="urlbar-page-action urlbar-icon-wrapper"
+                      role="button"
+                      data-l10n-id="urlbar-page-action-button"
+                      onmousedown="BrowserPageActions.mainButtonClicked(event);"
+                      onkeypress="BrowserPageActions.mainButtonClicked(event);">
+                  <image class="urlbar-icon"/>
+                </hbox>
+                <hbox id="star-button-box"
+                      hidden="true"
+                      role="button"
+                      class="urlbar-page-action urlbar-icon-wrapper"
+                      onclick="BrowserPageActions.doCommandForAction(PageActions.actionForID('bookmark'), event, this);">
+                  <image id="star-button"
+                         class="urlbar-icon"/>
+                </hbox>
+              </hbox>
+            </hbox>
+          </hbox>
+          <toolbartabstop/>
+        </toolbaritem>
diff --git a/browser/base/content/browser.css b/browser/base/content/browser.css
--- a/browser/base/content/browser.css
+++ b/browser/base/content/browser.css
@@ -94,11 +94,6 @@
   }
 }
 
-.search-one-offs[compact=true] .search-setting-button,
-.search-one-offs:not([compact=true]) .search-setting-button-compact {
-  display: none;
-}
-
 %ifdef MENUBAR_CAN_AUTOHIDE
 #toolbar-menubar[autohide="true"] {
   overflow: hidden;
@@ -578,22 +573,6 @@
   min-width: 1px;
 }
 
-/* Align URLs to the right in RTL mode. */
-#urlbar-input:-moz-locale-dir(rtl) {
-  text-align: right !important;
-}
-
-/* Make sure that the location bar's alignment changes according
-   to the input box direction if the user switches the text direction using
-   cmd_switchTextDirection (which applies a dir attribute to the <input>). */
-#urlbar-input[dir=ltr]:-moz-locale-dir(rtl) {
-  text-align: left !important;
-}
-
-#urlbar-input[dir=rtl]:-moz-locale-dir(ltr) {
-  text-align: right !important;
-}
-
 /*
  * Display visual cue that browser is under remote control.
  * This is to help users visually distinguish a user agent session that
@@ -625,71 +604,6 @@
   animation: none !important;
 }
 
-/* Show the url scheme in a static box when overflowing to the left */
-.urlbar-input-box {
-  position: relative;
-  direction: ltr;
-}
-
-#urlbar-scheme {
-  position: absolute;
-  height: 100%;
-  visibility: hidden;
-  direction: ltr;
-  pointer-events: none;
-}
-
-#urlbar-input {
-  mask-repeat: no-repeat;
-  unicode-bidi: plaintext;
-  text-align: match-parent;
-}
-
-#urlbar:not([focused])[domaindir="ltr"]> #urlbar-input-container > .urlbar-input-box > #urlbar-input {
-  direction: ltr;
-  unicode-bidi: embed;
-}
-
-/* The following rules apply overflow masks to the unfocused urlbar
-   This mask may be overriden when a Contextual Feature Recommendation is shown,
-   see browser/themes/shared/urlbar-searchbar.inc.css for details */
-
-#urlbar:not([focused])[textoverflow="both"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
-  mask-image: linear-gradient(to right, transparent, black 3ch, black calc(100% - 3ch), transparent);
-}
-#urlbar:not([focused])[textoverflow="right"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
-  mask-image: linear-gradient(to left, transparent, black 3ch);
-}
-#urlbar:not([focused])[textoverflow="left"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
-  mask-image: linear-gradient(to right, transparent, black 3ch);
-}
-
-/* The protocol is visible if there is an RTL domain and we overflow to the left.
-   Uses the required-valid trick to check if it contains a value */
-#urlbar:not([focused])[textoverflow="left"][domaindir="rtl"] > #urlbar-input-container > .urlbar-input-box > #urlbar-scheme:valid {
-  visibility: visible;
-}
-#urlbar:not([focused])[textoverflow="left"][domaindir="rtl"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
-  mask-image: linear-gradient(to right, transparent var(--urlbar-scheme-size), black calc(var(--urlbar-scheme-size) + 3ch));
-}
-
-/* Apply crisp rendering for favicons at exactly 2dppx resolution */
-@media (resolution: 2dppx) {
-  .searchbar-engine-image {
-    image-rendering: -moz-crisp-edges;
-  }
-}
-
-#urlbar[actiontype="switchtab"][actionoverride] > #urlbar-input-container > #urlbar-label-box,
-#urlbar:not([actiontype="switchtab"], [actiontype="extension"], [searchmode]) > #urlbar-input-container > #urlbar-label-box,
-#urlbar:not([actiontype="switchtab"]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-switchtab,
-#urlbar:not([actiontype="extension"]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-extension,
-#urlbar[searchmode][breakout-extend] > #urlbar-input-container > #urlbar-label-box,
-#urlbar:not([searchmode]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-search-mode,
-#urlbar[breakout-extend] > #urlbar-input-container > #urlbar-label-box > #urlbar-label-search-mode {
-  display: none;
-}
-
 #PopupAutoComplete > richlistbox > richlistitem[originaltype="loginsFooter"] {
   -moz-box-pack: center;
   color: FieldText;
@@ -736,9 +650,7 @@
 
 #urlbar-input-container[pageproxystate=invalid] > #page-action-buttons > .urlbar-page-action,
 #identity-box.chromeUI ~ #page-action-buttons > .urlbar-page-action:not(#star-button-box),
-#urlbar[usertyping] > #urlbar-input-container > #page-action-buttons > #urlbar-zoom-button,
-#urlbar:not([usertyping]) > #urlbar-input-container > #urlbar-go-button,
-#urlbar:not([focused]) > #urlbar-input-container > #urlbar-go-button {
+#urlbar[usertyping] > #urlbar-input-container > #page-action-buttons > #urlbar-zoom-button {
   display: none;
 }
 
diff --git a/browser/base/content/browser.xhtml b/browser/base/content/browser.xhtml
--- a/browser/base/content/browser.xhtml
+++ b/browser/base/content/browser.xhtml
@@ -1816,225 +1816,7 @@
           </toolbarbutton>
         </toolbaritem>
         <toolbarspring cui-areatype="toolbar" class="chromeclass-toolbar-additional"/>
-        <toolbaritem id="urlbar-container" flex="400" persist="width"
-                     removable="false"
-                     class="chromeclass-location" overflows="false">
-          <toolbartabstop/>
-          <hbox id="urlbar" flex="1"
-                context=""
-                focused="true"
-                pageproxystate="invalid">
-            <hbox id="urlbar-background"/>
-            <hbox id="urlbar-input-container"
-                  flex="1"
-                  pageproxystate="invalid">
-              <box id="remote-control-box"
-                   align="center"
-                   collapsed="true">
-                  <image id="remote-control-icon"/>
-              </box>
-              <box id="urlbar-search-button"
-                   class="chromeclass-toolbar-additional"/>
-              <!-- Use onclick instead of normal popup= syntax since the popup
-                   code fires onmousedown, and hence eats our favicon drag events. -->
-              <box id="tracking-protection-icon-container" align="center"
-                   role="button"
-                   onclick="gProtectionsHandler.handleProtectionsButtonEvent(event);"
-                   onkeypress="gProtectionsHandler.handleProtectionsButtonEvent(event);"
-                   onmouseover="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();"
-                   onfocus="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();"
-                   tooltip="tracking-protection-icon-tooltip">
-                <box id="tracking-protection-icon-box">
-                  <image id="tracking-protection-icon"/>
-                </box>
-                <tooltip id="tracking-protection-icon-tooltip">
-                  <description id="tracking-protection-icon-tooltip-label" class="tooltip-label"/>
-                </tooltip>
-              </box>
-              <box id="identity-box"
-                   pageproxystate="invalid"
-                   ondragstart="gIdentityHandler.onDragStart(event);">
-                <box id="identity-icon-box"
-                     role="button"
-                     align="center"
-                     data-l10n-id="urlbar-identity-button"
-                     class="identity-box-button"
-                     onclick="gIdentityHandler.handleIdentityButtonEvent(event); PageProxyClickHandler(event);"
-                     onkeypress="gIdentityHandler.handleIdentityButtonEvent(event);">
-                  <image id="identity-icon"/>
-                  <label id="identity-icon-label" class="plain" crop="center" flex="1"/>
-                </box>
-                <box id="identity-permission-box"
-                     data-l10n-id="urlbar-permissions-granted"
-                     role="button"
-                     align="center"
-                     class="identity-box-button"
-                     onclick="gPermissionPanel.handleIdentityButtonEvent(event); PageProxyClickHandler(event);"
-                     onkeypress="gPermissionPanel.handleIdentityButtonEvent(event);">
-                  <image id="permissions-granted-icon"/>
-                  <box style="pointer-events: none;">
-                      <image class="sharing-icon" id="webrtc-sharing-icon"/>
-                      <image class="sharing-icon geo-icon" id="geo-sharing-icon"/>
-                      <image class="sharing-icon xr-icon" id="xr-sharing-icon"/>
-                  </box>
-                  <box id="blocked-permissions-container" align="center">
-                    <image data-permission-id="geo" class="blocked-permission-icon geo-icon" role="button"
-                          data-l10n-id="urlbar-geolocation-blocked"/>
-                    <image data-permission-id="xr" class="blocked-permission-icon xr-icon" role="button"
-                          data-l10n-id="urlbar-xr-blocked"/>
-                    <image data-permission-id="desktop-notification" class="blocked-permission-icon desktop-notification-icon" role="button"
-                          data-l10n-id="urlbar-web-notifications-blocked"/>
-                    <image data-permission-id="camera" class="blocked-permission-icon camera-icon" role="button"
-                          data-l10n-id="urlbar-camera-blocked"/>
-                    <image data-permission-id="microphone" class="blocked-permission-icon microphone-icon" role="button"
-                          data-l10n-id="urlbar-microphone-blocked"/>
-                    <image data-permission-id="screen" class="blocked-permission-icon screen-icon" role="button"
-                          data-l10n-id="urlbar-screen-blocked"/>
-                    <image data-permission-id="persistent-storage" class="blocked-permission-icon persistent-storage-icon" role="button"
-                          data-l10n-id="urlbar-persistent-storage-blocked"/>
-                    <image data-permission-id="popup" class="blocked-permission-icon popup-icon" role="button"
-                          data-l10n-id="urlbar-popup-blocked"/>
-                    <image data-permission-id="autoplay-media" class="blocked-permission-icon autoplay-media-icon" role="button"
-                          data-l10n-id="urlbar-autoplay-media-blocked"/>
-                    <image data-permission-id="canvas" class="blocked-permission-icon canvas-icon" role="button"
-                          data-l10n-id="urlbar-canvas-blocked"/>
-                    <image data-permission-id="midi" class="blocked-permission-icon midi-icon" role="button"
-                          data-l10n-id="urlbar-midi-blocked"/>
-                    <image data-permission-id="install" class="blocked-permission-icon install-icon" role="button"
-                          data-l10n-id="urlbar-install-blocked"/>
-                  </box>
-                </box>
-                <box id="notification-popup-box"
-                     class="anchor-root"
-                     hidden="true"
-                     align="center">
-                  <image id="default-notification-icon" class="notification-anchor-icon" role="button"
-                         data-l10n-id="urlbar-default-notification-anchor"/>
-                  <image id="geo-notification-icon" class="notification-anchor-icon geo-icon" role="button"
-                         data-l10n-id="urlbar-geolocation-notification-anchor"/>
-                  <image id="xr-notification-icon" class="notification-anchor-icon xr-icon" role="button"
-                         data-l10n-id="urlbar-xr-notification-anchor"/>
-                  <image id="autoplay-media-notification-icon" class="notification-anchor-icon autoplay-media-icon" role="button"
-                         data-l10n-id="urlbar-autoplay-notification-anchor"/>
-                  <image id="addons-notification-icon" class="notification-anchor-icon install-icon" role="button"
-                         data-l10n-id="urlbar-addons-notification-anchor"/>
-                  <image id="canvas-notification-icon" class="notification-anchor-icon" role="button"
-                         data-l10n-id="urlbar-canvas-notification-anchor"/>
-                  <image id="indexedDB-notification-icon" class="notification-anchor-icon indexedDB-icon" role="button"
-                         data-l10n-id="urlbar-indexed-db-notification-anchor"/>
-                  <image id="password-notification-icon" class="notification-anchor-icon login-icon" role="button"
-                         data-l10n-id="urlbar-password-notification-anchor"/>
-                  <stack id="plugins-notification-icon" class="notification-anchor-icon" role="button" align="center" data-l10n-id="urlbar-plugins-notification-anchor">
-                    <image class="plugin-icon" />
-                    <image id="plugin-icon-badge" />
-                  </stack>
-                  <image id="web-notifications-notification-icon" class="notification-anchor-icon desktop-notification-icon" role="button"
-                         data-l10n-id="urlbar-web-notification-anchor"/>
-                  <image id="webRTC-shareDevices-notification-icon" class="notification-anchor-icon camera-icon" role="button"
-                         data-l10n-id="urlbar-web-rtc-share-devices-notification-anchor"/>
-                  <image id="webRTC-shareMicrophone-notification-icon" class="notification-anchor-icon microphone-icon" role="button"
-                         data-l10n-id="urlbar-web-rtc-share-microphone-notification-anchor"/>
-                  <image id="webRTC-shareScreen-notification-icon" class="notification-anchor-icon screen-icon" role="button"
-                         data-l10n-id="urlbar-web-rtc-share-screen-notification-anchor"/>
-                  <image id="servicesInstall-notification-icon" class="notification-anchor-icon service-icon" role="button"
-                         data-l10n-id="urlbar-services-notification-anchor"/>
-                  <image id="translate-notification-icon" class="notification-anchor-icon translation-icon" role="button"
-                         data-l10n-id="urlbar-translate-notification-anchor"/>
-                  <image id="translated-notification-icon" class="notification-anchor-icon translation-icon in-use" role="button"
-                         data-l10n-id="urlbar-translated-notification-anchor"/>
-                  <image id="eme-notification-icon" class="notification-anchor-icon drm-icon" role="button"
-                         data-l10n-id="urlbar-eme-notification-anchor"/>
-                  <image id="persistent-storage-notification-icon" class="notification-anchor-icon persistent-storage-icon" role="button"
-                         data-l10n-id="urlbar-persistent-storage-notification-anchor"/>
-                  <image id="midi-notification-icon" class="notification-anchor-icon midi-icon" role="button"
-                         data-l10n-id="urlbar-midi-notification-anchor"/>
-                  <image id="webauthn-notification-icon" class="notification-anchor-icon" role="button"
-                         data-l10n-id="urlbar-web-authn-anchor"/>
-                  <image id="storage-access-notification-icon" class="notification-anchor-icon storage-access-icon" role="button"
-                         data-l10n-id="urlbar-storage-access-anchor"/>
-                </box>
-              </box>
-              <box id="urlbar-label-box" align="center">
-                <label id="urlbar-label-switchtab" class="urlbar-label" data-l10n-id="urlbar-switch-to-tab"/>
-                <label id="urlbar-label-extension" class="urlbar-label" data-l10n-id="urlbar-extension"/>
-                <label id="urlbar-label-search-mode" class="urlbar-label"/>
-              </box>
-              <html:div id="urlbar-search-mode-indicator">
-                <html:span id="urlbar-search-mode-indicator-title"/>
-                <html:div id="urlbar-search-mode-indicator-close"
-                       class="close-button"
-                       role="button"/>
-              </html:div>
-              <moz-input-box tooltip="aHTMLTooltip"
-                             class="urlbar-input-box"
-                             flex="1"
-                             role="combobox"
-                             aria-owns="urlbar-results">
-                <html:input id="urlbar-scheme"
-                            required="required"/>
-                <html:input id="urlbar-input"
-                            anonid="input"
-                            aria-controls="urlbar-results"
-                            aria-autocomplete="both"
-                            inputmode="mozAwesomebar"
-                            data-l10n-id="urlbar-placeholder"
-                            data-l10n-attrs="placeholder"/>
-              </moz-input-box>
-              <image id="urlbar-go-button"
-                     class="urlbar-icon"
-                     onclick="gURLBar.handleCommand(event);"
-                     data-l10n-id="urlbar-go-button"/>
-              <hbox id="page-action-buttons" context="pageActionContextMenu">
-                <toolbartabstop/>
-                <hbox id="contextual-feature-recommendation" role="button" hidden="true">
-                  <hbox id="cfr-label-container">
-                    <label id="cfr-label"/>
-                  </hbox>
-                  <hbox id="cfr-button"
-                        role="presentation"
-                        class="urlbar-page-action urlbar-icon-wrapper">
-                    <image class="urlbar-icon"/>
-                  </hbox>
-                </hbox>
-                <hbox id="userContext-icons" hidden="true">
-                  <label id="userContext-label"/>
-                  <image id="userContext-indicator"/>
-                </hbox>
-                <hbox id="reader-mode-button"
-                      class="urlbar-page-action urlbar-icon-wrapper"
-                      role="button"
-                      hidden="true"
-                      tooltip="dynamic-shortcut-tooltip"
-                      onclick="AboutReaderParent.buttonClick(event);">
-                  <image id="reader-mode-button-icon"
-                         class="urlbar-icon"/>
-                </hbox>
-                <toolbarbutton id="urlbar-zoom-button"
-                       onclick="FullZoom.reset(); FullZoom.resetScalingZoom();"
-                       tooltip="dynamic-shortcut-tooltip"
-                       hidden="true"/>
-                <hbox id="pageActionButton"
-                      class="urlbar-page-action urlbar-icon-wrapper"
-                      role="button"
-                      data-l10n-id="urlbar-page-action-button"
-                      onmousedown="BrowserPageActions.mainButtonClicked(event);"
-                      onkeypress="BrowserPageActions.mainButtonClicked(event);">
-                  <image class="urlbar-icon"/>
-                </hbox>
-                <hbox id="star-button-box"
-                      hidden="true"
-                      role="button"
-                      class="urlbar-page-action urlbar-icon-wrapper"
-                      onclick="BrowserPageActions.doCommandForAction(PageActions.actionForID('bookmark'), event, this);">
-                  <image id="star-button"
-                         class="urlbar-icon"/>
-                </hbox>
-              </hbox>
-            </hbox>
-          </hbox>
-          <toolbartabstop/>
-        </toolbaritem>
-
+#include browser-urlbar.inc
         <toolbarspring cui-areatype="toolbar" class="chromeclass-toolbar-additional"/>
 
         <toolbarbutton id="downloads-button"
diff --git a/browser/components/urlbar/UrlbarController.jsm b/browser/components/urlbar/UrlbarController.jsm
--- a/browser/components/urlbar/UrlbarController.jsm
+++ b/browser/components/urlbar/UrlbarController.jsm
@@ -65,15 +65,6 @@
     if (!options.input) {
       throw new Error("Missing options: input");
     }
-    if (!options.input.window) {
-      throw new Error("input is missing 'window' property.");
-    }
-    if (
-      !options.input.window.location ||
-      options.input.window.location.href != AppConstants.BROWSER_CHROME_URL
-    ) {
-      throw new Error("input.window should be an actual browser window.");
-    }
     if (!("isPrivate" in options.input)) {
       throw new Error("input.isPrivate must be set.");
     }
@@ -437,7 +428,12 @@
    */
   speculativeConnect(result, context, reason) {
     // Never speculative connect in private contexts.
-    if (!this.input || context.isPrivate || !context.results.length) {
+    if (
+      !this.input ||
+      !this.browserWindow ||
+      context.isPrivate ||
+      !context.results.length
+    ) {
       return;
     }
     let { url } = UrlbarUtils.getUrlFromResult(result);
diff --git a/browser/components/urlbar/UrlbarInput.jsm b/browser/components/urlbar/UrlbarInput.jsm
--- a/browser/components/urlbar/UrlbarInput.jsm
+++ b/browser/components/urlbar/UrlbarInput.jsm
@@ -14,6 +14,7 @@
   AppConstants: "resource://gre/modules/AppConstants.jsm",
   BrowserSearchTelemetry: "resource:///modules/BrowserSearchTelemetry.jsm",
   BrowserUIUtils: "resource:///modules/BrowserUIUtils.jsm",
+  BrowserWindowTracker: "resource:///modules/BrowserWindowTracker.jsm",
   CONTEXTUAL_SERVICES_PING_TYPES:
     "resource:///modules/PartnerLinkAttribution.jsm",
   ExtensionSearchHandler: "resource://gre/modules/ExtensionSearchHandler.jsm",
@@ -54,6 +55,314 @@
   element.ownerGlobal.windowUtils.getBoundsWithoutFlushing(element);
 let px = number => number.toFixed(2) + "px";
 
+/**
+ * Represents a specific browser instance.
+ *
+ * The default instance is just a no-op.
+ */
+class Browser {
+  constructor(options) {
+    this.manager = options.manager;
+
+    this._userTypedValue = null;
+    this._currentURI = Services.io.newURI("about:blank");
+  }
+
+  get window() {
+    return this.manager.window;
+  }
+
+  get userContextId() {
+    return "";
+  }
+
+  get userTypedValue() {
+    return this._userTypedValue;
+  }
+
+  set userTypedValue(val) {
+    this._userTypedValue = val;
+  }
+
+  get initialPageLoadedFromUserAction() {
+    return undefined;
+  }
+
+  set initialPageLoadedFromUserAction(val) {
+    // no-op
+  }
+
+  get contentTitle() {
+    return "";
+  }
+
+  get currentURI() {
+    return this._currentURI;
+  }
+
+  get lastLocationChange() {
+    return undefined;
+  }
+
+  get securityUIState() {
+    return 0;
+  }
+
+  deleteAuthPromptAbuseCounter() {
+    // no-op
+  }
+
+  clearTemporaryPermissions() {
+    // no-op
+  }
+
+  focus() {
+    // no-op
+  }
+
+  openTrustedUILink(url, openUILinkWhere, params) {
+    if (openUILinkWhere == "current") {
+      openUILinkWhere = "tab";
+    }
+
+    this.window.openTrustedLinkIn(url, openUILinkWhere, params);
+
+    this.manager.input.handleRevert();
+  }
+
+  checkEmptyPageOrigin(uri = this.currentURI) {
+    return true;
+  }
+
+  checkURIFixup(fixupInfo) {
+    // no-op
+  }
+
+  recordSearchTelemetry(engine, source, details = {}) {
+    // no-op
+  }
+
+  get isEmpty() {
+    return false;
+  }
+}
+
+const BROWSER_RO_FIELDS = ["currentURI", "lastLocationChange", "contentTitle"];
+
+const BROWSER_RW_FIELDS = ["userTypedValue", "initialPageLoadedFromUserAction"];
+
+/**
+ * A `Browser` that wraps a real browser element.
+ */
+class BrowserElement extends Browser {
+  constructor(options) {
+    super(options);
+    this.browserElement = options.element;
+    this.tabElement = this.manager.gBrowser.getTabForBrowser(
+      this.browserElement
+    );
+
+    Object.defineProperties(
+      this,
+      Object.fromEntries([
+        ...BROWSER_RW_FIELDS.map(field => {
+          return [
+            field,
+            {
+              enumerable: true,
+              get: () => this.browserElement[field],
+              set: val => {
+                this.browserElement[field] = val;
+              },
+            },
+          ];
+        }),
+
+        ...BROWSER_RO_FIELDS.map(field => {
+          return [
+            field,
+            {
+              enumerable: true,
+              get: () => this.browserElement[field],
+            },
+          ];
+        }),
+      ])
+    );
+  }
+
+  get userContextId() {
+    return this.browserElement.getAttribute("usercontextid");
+  }
+
+  get securityUIState() {
+    return this.browserElement.securityUI.state;
+  }
+
+  deleteAuthPromptAbuseCounter() {
+    delete this.browserElement.authPromptAbuseCounter;
+  }
+
+  clearTemporaryPermissions() {
+    this.window.SitePermissions.clearTemporaryBlockPermissions(
+      this.browserElement
+    );
+  }
+
+  focus() {
+    this.browserElement.focus();
+  }
+
+  openTrustedUILink(url, openUILinkWhere, params) {
+    this.window.openTrustedLinkIn(url, openUILinkWhere, {
+      ...params,
+      targetBrowser: this.browserElement,
+    });
+  }
+
+  checkEmptyPageOrigin(uri = this.currentURI) {
+    return BrowserUIUtils.checkEmptyPageOrigin(this.browserElement, uri);
+  }
+
+  checkURIFixup(fixupInfo) {
+    this.window.gKeywordURIFixup.check(this.browserElement, fixupInfo);
+  }
+
+  recordSearchTelemetry(engine, source, details = {}) {
+    BrowserSearchTelemetry.recordSearch(
+      this.browserElement,
+      engine,
+      source,
+      details
+    );
+  }
+
+  get isEmpty() {
+    return this.tabElement.isEmpty;
+  }
+}
+
+const FORWARDED_RO_FIELDS = ["currentURI", "contentTitle"];
+const FORWARDED_RW_FIELDS = ["userTypedValue"];
+
+/**
+ * Handles any interactions the urlbar has to make with controlled browsers.
+ *
+ * The default instance assumes no browser elements are present and so works for
+ * a window with no browsers.
+ */
+class BrowserManager {
+  constructor(options) {
+    this.input = options.input;
+
+    this._browser = new Browser({
+      manager: this,
+    });
+
+    Object.defineProperties(
+      this,
+      Object.fromEntries([
+        ...FORWARDED_RW_FIELDS.map(field => {
+          return [
+            field,
+            {
+              enumerable: true,
+              get: () => this.selectedBrowser[field],
+              set: val => {
+                this.selectedBrowser[field] = val;
+              },
+            },
+          ];
+        }),
+
+        ...FORWARDED_RO_FIELDS.map(field => {
+          return [
+            field,
+            {
+              enumerable: true,
+              get: () => this.selectedBrowser[field],
+            },
+          ];
+        }),
+      ])
+    );
+  }
+
+  get window() {
+    return this.input.window;
+  }
+
+  get selectedBrowser() {
+    return this._browser;
+  }
+
+  get delayedStartupFinished() {
+    return true;
+  }
+
+  switchToTabHavingURI(aURI, aOpenNew, aOpenParams = {}) {
+    let window = BrowserWindowTracker.getTopWindow({
+      allowPopups: aOpenParams.allowPopups,
+    });
+
+    if (window) {
+      window.switchToTabHavingURI(aURI, aOpenNew, aOpenParams);
+      return;
+    }
+
+    if (!aOpenNew) {
+      return;
+    }
+
+    this.window.openTrustedLinkIn(aURI, "window", aOpenParams);
+  }
+
+  removeBrowser(browser) {
+    // no-op
+  }
+}
+
+/**
+ * A `BrowserManager` that controls a tabbrowser.
+ */
+class TabBrowserManager extends BrowserManager {
+  constructor(options) {
+    super(options);
+
+    this.gBrowser.tabContainer.addEventListener("TabSelect", this.input);
+    this.browsers = new WeakMap();
+  }
+
+  get gBrowser() {
+    return this.window.gBrowser;
+  }
+
+  get delayedStartupFinished() {
+    return this.window.gBrowserInit.delayedStartupFinished;
+  }
+
+  getBrowserForElement(element) {
+    let browser = this.browsers.get(element);
+    if (!browser) {
+      browser = new BrowserElement({
+        manager: this,
+        element,
+      });
+      this.browsers.set(element, browser);
+    }
+
+    return browser;
+  }
+
+  get selectedBrowser() {
+    return this.getBrowserForElement(this.gBrowser.selectedBrowser);
+  }
+
+  removeBrowser(browser) {
+    this.gBrowser.removeTab(browser.tabElement);
+  }
+}
+
 /**
  * Implements the text input part of the address bar UI.
  */
@@ -66,10 +375,22 @@
    */
   constructor(options = {}) {
     this.textbox = options.textbox;
+    this.muxer = options.muxer;
 
     this.window = this.textbox.ownerGlobal;
+    if ("gBrowser" in this.window && this.window.gBrowser) {
+      this.browserManager = new TabBrowserManager({
+        input: this,
+      });
+    } else {
+      this.browserManager = new BrowserManager({
+        input: this,
+      });
+    }
+
     this.isPrivate = PrivateBrowsingUtils.isWindowPrivate(this.window);
     this.document = this.window.document;
+    this.isInitialPage = options.isInitialPage ?? (() => false);
 
     // Create the panel to contain results.
     this.textbox.appendChild(
@@ -255,8 +576,6 @@
     // recording abandonment events when the command causes a blur event.
     this.view.panel.addEventListener("command", this, true);
 
-    this.window.gBrowser.tabContainer.addEventListener("TabSelect", this);
-
     this.window.addEventListener("customizationstarting", this);
     this.window.addEventListener("aftercustomization", this);
 
@@ -269,8 +588,8 @@
     this._compositionState = UrlbarUtils.COMPOSITION.NONE;
     this._compositionClosedPopup = false;
 
-    this.editor.newlineHandling =
-      Ci.nsIEditor.eNewlinesStripSurroundingWhitespace;
+    //this.editor.newlineHandling =
+    //  Ci.nsIEditor.eNewlinesStripSurroundingWhitespace;
   }
 
   /**
@@ -323,14 +642,14 @@
    *        otherwise.
    */
   setURI(uri = null, dueToTabSwitch = false) {
-    let value = this.window.gBrowser.userTypedValue;
+    let value = this.browserManager.userTypedValue;
     let valid = false;
 
     // Explicitly check for nulled out value. We don't want to reset the URL
     // bar if the user has deleted the URL and we'd just put the same URL
     // back. See bug 304198.
     if (value === null) {
-      uri = uri || this.window.gBrowser.currentURI;
+      uri = uri || this.browserManager.currentURI;
       // Strip off usernames and passwords for the location bar
       try {
         uri = Services.io.createExposableURI(uri);
@@ -339,11 +658,8 @@
       // Replace initial page URIs with an empty string
       // only if there's no opener (bug 370555).
       if (
-        this.window.isInitialPage(uri) &&
-        BrowserUIUtils.checkEmptyPageOrigin(
-          this.window.gBrowser.selectedBrowser,
-          uri
-        )
+        this.isInitialPage(uri) &&
+        this.browserManager.selectedBrowser.checkEmptyPageOrigin(uri)
       ) {
         value = "";
       } else {
@@ -358,8 +674,8 @@
       valid =
         !this.window.isBlankPageURL(uri.spec) || uri.schemeIs("moz-extension");
     } else if (
-      this.window.isInitialPage(value) &&
-      BrowserUIUtils.checkEmptyPageOrigin(this.window.gBrowser.selectedBrowser)
+      this.isInitialPage(value) &&
+      this.browserManager.selectedBrowser.checkEmptyPageOrigin()
     ) {
       value = "";
       valid = true;
@@ -608,8 +924,8 @@
     // docshell wouldn't know about our engine restriction.
     // Also remember to invoke this._recordSearch, after replacing url with
     // the appropriate engine submission url.
-    let browser = this.window.gBrowser.selectedBrowser;
-    let lastLocationChange = browser.lastLocationChange;
+    let browser = this.browserManager.selectedBrowser;
+    let lastLocationChange = this.browser.lastLocationChange;
     UrlbarUtils.getHeuristicResultFor(url)
       .then(newResult => {
         // Because this happens asynchronously, we must verify that the browser
@@ -651,7 +967,7 @@
   }
 
   handleRevert() {
-    this.window.gBrowser.userTypedValue = null;
+    this.browserManager.userTypedValue = null;
     // Nullify search mode before setURI so it won't try to restore it.
     this.searchMode = null;
     this.setURI(null, true);
@@ -686,7 +1002,7 @@
     result,
     event,
     element = null,
-    browser = this.window.gBrowser.selectedBrowser
+    browser = this.browserManager.selectedBrowser
   ) {
     // When a one-off is selected, we restyle heuristic results to look like
     // search results. In the unlikely event that they are clicked, instead of
@@ -791,7 +1107,7 @@
         }
 
         this.handleRevert();
-        let prevTab = this.window.gBrowser.selectedTab;
+        let prevBrowser = this.browserManager.selectedBrowser;
         let loadOpts = {
           adoptIntoActiveWindow: UrlbarPrefs.get(
             "switchTabs.adoptIntoActiveWindow"
@@ -805,13 +1121,13 @@
           provider: result.providerName,
         });
 
-        let switched = this.window.switchToTabHavingURI(
+        let switched = this.browserManager.switchToTabHavingURI(
           Services.io.newURI(url),
           false,
           loadOpts
         );
-        if (switched && prevTab.isEmpty) {
-          this.window.gBrowser.removeTab(prevTab);
+        if (switched && prevBrowser.isEmpty) {
+          this.browserManager.removeBrowser(prevBrowser);
         }
         return;
       }
@@ -845,10 +1161,7 @@
           // See also URIFixupChild.jsm and keyword-uri-fixup.
           let fixupInfo = this._getURIFixupInfo(originalUntrimmedValue.trim());
           if (fixupInfo) {
-            this.window.gKeywordURIFixup.check(
-              this.window.gBrowser.selectedBrowser,
-              fixupInfo
-            );
+            this.browserManager.selectedBrowser.checkURIFixup(fixupInfo);
           }
         }
 
@@ -1232,7 +1545,7 @@
       // Avoid clobbering added spaces (for token aliases, for example).
       !this.value.endsWith(" ")
     ) {
-      this._setValue(this.window.gBrowser.userTypedValue, false);
+      this._setValue(this.browserManager.userTypedValue, false);
     }
 
     return false;
@@ -1295,10 +1608,8 @@
       isPrivate: this.isPrivate,
       maxResults: UrlbarPrefs.get("maxRichResults"),
       searchString,
-      userContextId: this.window.gBrowser.selectedBrowser.getAttribute(
-        "usercontextid"
-      ),
-      currentPage: this.window.gBrowser.currentURI.spec,
+      userContextId: this.browserManager.selectedBrowser.userContextId,
+      currentPage: this.browserManager.currentURI.spec,
       formHistoryName: this.formHistoryName,
       allowSearchSuggestions:
         !event ||
@@ -1307,6 +1618,10 @@
         event.data.length <= UrlbarPrefs.get("maxCharsForSearchSuggestions"),
     };
 
+    if (this.muxer) {
+      options.muxer = this.muxer;
+    }
+
     if (this.searchMode) {
       this.confirmSearchMode();
       options.searchMode = this.searchMode;
@@ -1540,12 +1855,12 @@
     }
 
     // Enter search mode if the browser is selected.
-    if (browser == this.window.gBrowser.selectedBrowser) {
+    if (browser == this.browserManager.selectedBrowser) {
       this._updateSearchModeUI(searchMode);
       if (searchMode) {
         // Set userTypedValue to the query string so that it's properly restored
         // when switching back to the current tab and across sessions.
-        this.window.gBrowser.userTypedValue = this.untrimmedValue;
+        this.browserManager.userTypedValue = this.untrimmedValue;
         this.valueIsTyped = true;
         if (!searchMode.isPreview && !areSearchModesSame) {
           try {
@@ -1563,7 +1878,7 @@
    */
   restoreSearchModeState() {
     let modes = this._searchModesByBrowser.get(
-      this.window.gBrowser.selectedBrowser
+      this.browserManager.selectedBrowser
     );
     this.searchMode = modes?.confirmed;
   }
@@ -1631,11 +1946,11 @@
   }
 
   get searchMode() {
-    return this.getSearchMode(this.window.gBrowser.selectedBrowser);
+    return this.getSearchMode(this.browserManager.selectedBrowser);
   }
 
   set searchMode(searchMode) {
-    this.setSearchMode(searchMode, this.window.gBrowser.selectedBrowser);
+    this.setSearchMode(searchMode, this.browserManager.selectedBrowser);
   }
 
   async updateLayoutBreakout() {
@@ -1726,7 +2041,9 @@
 
     this.setAttribute("pageproxystate", state);
     this._inputContainer.setAttribute("pageproxystate", state);
-    this._identityBox.setAttribute("pageproxystate", state);
+    if (this._identityBox) {
+      this._identityBox.setAttribute("pageproxystate", state);
+    }
 
     if (state == "valid") {
       this._lastValidURLStr = this.value;
@@ -2101,7 +2418,7 @@
 
     let uri;
     if (this.getAttribute("pageproxystate") == "valid") {
-      uri = this.window.gBrowser.currentURI;
+      uri = this.browserManager.currentURI;
     } else {
       // The value could be:
       // 1. a trimmed url, set by selecting a result
@@ -2199,8 +2516,7 @@
   _recordSearch(engine, event, searchActionDetails = {}) {
     const isOneOff = this.view.oneOffSearchButtons.eventTargetIsAOneOff(event);
 
-    BrowserSearchTelemetry.recordSearch(
-      this.window.gBrowser.selectedBrowser,
+    this.browserManager.selectedBrowser.recordSearchTelemetry(
       engine,
       // Without checking !isOneOff, we might record the string
       // oneoff_urlbar-searchmode in the SEARCH_COUNTS probe (in addition to
@@ -2328,7 +2644,7 @@
    *   Details of the result type, if any.
    * @param {UrlbarUtils.RESULT_SOURCE} [result.source]
    *   Details of the result source, if any.
-   * @param {object} browser [optional] the browser to use for the load.
+   * @param {object} browser [optional] the `Browser` to use for the load.
    */
   _loadURL(
     url,
@@ -2336,7 +2652,7 @@
     openUILinkWhere,
     params,
     resultDetails = null,
-    browser = this.window.gBrowser.selectedBrowser
+    browser = this.browserManager.selectedBrowser
   ) {
     // No point in setting these because we'll handleRevert() a few rows below.
     if (openUILinkWhere == "current") {
@@ -2345,10 +2661,7 @@
     }
 
     // No point in setting this if we are loading in a new window.
-    if (
-      openUILinkWhere != "window" &&
-      this.window.gInitialPages.includes(url)
-    ) {
+    if (openUILinkWhere != "window" && this.isInitialPage(url)) {
       browser.initialPageLoadedFromUserAction = url;
     }
 
@@ -2367,7 +2680,7 @@
       params.triggeringPrincipal.isSystemPrincipal
     ) {
       // Reset DOS mitigations for the basic auth prompt.
-      delete browser.authPromptAbuseCounter;
+      browser.deleteAuthPromptAbuseCounter();
 
       // Reset temporary permissions on the current tab if the user reloads
       // the tab via the urlbar.
@@ -2376,14 +2689,13 @@
         browser.currentURI &&
         url === browser.currentURI.spec
       ) {
-        this.window.SitePermissions.clearTemporaryBlockPermissions(browser);
+        browser.clearTemporaryPermissions();
       }
     }
 
     params.allowThirdPartyFixup = true;
 
     if (openUILinkWhere == "current") {
-      params.targetBrowser = browser;
       params.indicateErrorPageLoad = true;
       params.allowPinnedTabHostChange = true;
       params.allowPopups = url.startsWith("javascript:");
@@ -2415,8 +2727,9 @@
     this._notifyStartNavigation(resultDetails);
 
     try {
-      this.window.openTrustedLinkIn(url, openUILinkWhere, params);
+      browser.openTrustedUILink(url, openUILinkWhere, params);
     } catch (ex) {
+      console.error(ex);
       // This load can throw an exception in certain cases, which means
       // we'll want to replace the URL with the loaded URL:
       if (ex.result != Cr.NS_ERROR_LOAD_SHOWED_ERRORPAGE) {
@@ -2468,7 +2781,7 @@
     if (
       where == "tab" &&
       reuseEmpty &&
-      this.window.gBrowser.selectedTab.isEmpty
+      this.browserManager.selectedBrowser.isEmpty
     ) {
       where = "current";
     }
@@ -2483,6 +2796,9 @@
   _initPasteAndGo() {
     let inputBox = this.querySelector("moz-input-box");
     let contextMenu = inputBox.menupopup;
+    if (!contextMenu) {
+      return;
+    }
     let insertLocation = contextMenu.firstElementChild;
     while (
       insertLocation.nextElementSibling &&
@@ -2658,8 +2974,8 @@
 
     this.toggleAttribute("searchmode", true);
     // Clear autofill.
-    if (this._autofillPlaceholder && this.window.gBrowser.userTypedValue) {
-      this.value = this.window.gBrowser.userTypedValue;
+    if (this._autofillPlaceholder && this.browserManager.userTypedValue) {
+      this.value = this.browserManager.userTypedValue;
     }
     // Search mode should only be active when pageproxystate is invalid.
     if (this.getAttribute("pageproxystate") == "valid") {
@@ -2712,10 +3028,10 @@
 
     this.removeAttribute("focused");
 
-    if (this._autofillPlaceholder && this.window.gBrowser.userTypedValue) {
+    if (this._autofillPlaceholder && this.browserManager.userTypedValue) {
       // If we were autofilling, remove the autofilled portion, by restoring
       // the value to the last typed one.
-      this.value = this.window.gBrowser.userTypedValue;
+      this.value = this.browserManager.userTypedValue;
     } else if (this.value == this._focusUntrimmedValue) {
       // If the value was untrimmed by _on_focus and didn't change, trim it.
       this.value = this._focusUntrimmedValue;
@@ -2923,7 +3239,7 @@
     this._untrimmedValue = value;
     this._resultForCurrentValue = null;
 
-    this.window.gBrowser.userTypedValue = value;
+    this.browserManager.userTypedValue = value;
     // Unset userSelectionBehavior because the user is modifying the search
     // string, thus there's no valid selection. This is also used by the view
     // to set "aria-activedescendant", thus it should never get stale.
@@ -3162,7 +3478,7 @@
       try {
         const loadingBrowser = await this._keyDownEnterDeferred.promise;
         // Ensure the selected browser didn't change in the meanwhile.
-        if (this.window.gBrowser.selectedBrowser === loadingBrowser) {
+        if (this.browserManager.selectedBrowser === loadingBrowser) {
           loadingBrowser.focus();
           // Make sure the domain name stays visible for spoof protection and usability.
           this.selectionStart = this.selectionEnd = 0;
@@ -3202,7 +3518,7 @@
         // This can happen for example if we entered search mode typing a
         // a partial engine domain and selecting a tab-to-search result.
         if (!this.value) {
-          this.window.gBrowser.userTypedValue = null;
+          this.browserManager.userTypedValue = null;
         }
         this.confirmSearchMode();
       }
@@ -3258,8 +3574,8 @@
       return;
     }
 
-    let href = this.window.gBrowser.currentURI.displaySpec;
-    let title = this.window.gBrowser.contentTitle || href;
+    let href = this.browserManager.currentURI.displaySpec;
+    let title = this.browserManager.contentTitle || href;
 
     event.dataTransfer.setData("text/x-moz-url", `${href}\n${title}`);
     event.dataTransfer.setData("text/unicode", href);
@@ -3278,7 +3594,7 @@
     let droppedItem = getDroppableData(event);
     let droppedURL =
       droppedItem instanceof URL ? droppedItem.href : droppedItem;
-    if (droppedURL && droppedURL !== this.window.gBrowser.currentURI.spec) {
+    if (droppedURL && droppedURL !== this.browserManager.currentURI.spec) {
       let principal = Services.droppedLinkHandler.getTriggeringPrincipal(event);
       this.value = droppedURL;
       this.setPageProxyState("invalid");
@@ -3291,7 +3607,7 @@
       // the the dropped value, instead we want to keep showing the current page
       // url until an onLocationChange happens.
       // See the handling in `setURI` for further details.
-      this.window.gBrowser.userTypedValue = null;
+      this.browserManager.userTypedValue = null;
       this.setURI(null, true);
     }
   }
diff --git a/browser/components/urlbar/UrlbarMuxerUnifiedComplete.jsm b/browser/components/urlbar/UrlbarMuxerUnifiedComplete.jsm
--- a/browser/components/urlbar/UrlbarMuxerUnifiedComplete.jsm
+++ b/browser/components/urlbar/UrlbarMuxerUnifiedComplete.jsm
@@ -8,7 +8,7 @@
  * This module exports a component used to sort results in a UrlbarQueryContext.
  */
 
-var EXPORTED_SYMBOLS = ["UrlbarMuxerUnifiedComplete"];
+var EXPORTED_SYMBOLS = ["UrlbarMuxerUnifiedComplete", "MuxerUnifiedComplete"];
 
 const { XPCOMUtils } = ChromeUtils.import(
   "resource://gre/modules/XPCOMUtils.jsm"
diff --git a/browser/components/urlbar/UrlbarProvidersManager.jsm b/browser/components/urlbar/UrlbarProvidersManager.jsm
--- a/browser/components/urlbar/UrlbarProvidersManager.jsm
+++ b/browser/components/urlbar/UrlbarProvidersManager.jsm
@@ -148,6 +148,15 @@
     return this.providers.find(p => p.name == name);
   }
 
+  /**
+   * Verifies that a named muxer exists.
+   * @param {string} name the name of a muxer.
+   * @returns {boolean}
+   */
+  hasMuxer(name) {
+    return this.muxers.has(name);
+  }
+
   /**
    * Registers a muxer object with the manager.
    * @param {object} muxer a UrlbarMuxer object
diff --git a/browser/components/urlbar/UrlbarUtils.jsm b/browser/components/urlbar/UrlbarUtils.jsm
--- a/browser/components/urlbar/UrlbarUtils.jsm
+++ b/browser/components/urlbar/UrlbarUtils.jsm
@@ -1449,6 +1449,8 @@
    *   Defaults to true.
    * @param {string} [options.formHistoryName]
    *   The name under which the local form history is registered.
+   * @param {string} [options.muxer]
+   *   The name of a muxer to use otherwise the default muxer is used.
    */
   constructor(options = {}) {
     this._checkRequiredOptions(options, [
@@ -1472,6 +1474,7 @@
       ["providers", v => Array.isArray(v) && v.length],
       ["searchMode", v => v && typeof v == "object"],
       ["sources", v => Array.isArray(v) && v.length],
+      ["muxer", v => UrlbarProvidersManager.hasMuxer(v)],
     ]) {
       if (prop in options) {
         if (!checkFn(options[prop])) {
diff --git a/browser/components/urlbar/UrlbarValueFormatter.jsm b/browser/components/urlbar/UrlbarValueFormatter.jsm
--- a/browser/components/urlbar/UrlbarValueFormatter.jsm
+++ b/browser/components/urlbar/UrlbarValueFormatter.jsm
@@ -17,6 +17,8 @@
   UrlbarUtils: "resource:///modules/UrlbarUtils.jsm",
 });
 
+const MetadataCache = new WeakMap();
+
 /**
  * Applies URL highlighting and other styling to the text in the urlbar input,
  * depending on the text.
@@ -53,7 +55,7 @@
     // Service.search before first paint (delayed startup) because there's a
     // performance test that prohibits it, so first bail if delayed startup
     // isn't finished.
-    if (!this.window.gBrowserInit.delayedStartupFinished) {
+    if (!this.urlbarInput.browserManager.delayedStartupFinished) {
       return;
     }
     if (!Services.search.isInitialized) {
@@ -132,15 +134,16 @@
     }
 
     let url = this.inputField.value;
-    let browser = this.window.gBrowser.selectedBrowser;
+    let browser = this.urlbarInput.browserManager.selectedBrowser;
 
     // Since doing a full URIFixup and offset calculations is expensive, we
     // keep the metadata cached in the browser itself, so when switching tabs
     // we can skip most of this.
-    if (browser._urlMetaData && browser._urlMetaData.url == url) {
-      return browser._urlMetaData.data;
+    let metadata = MetadataCache.get(browser);
+    if (metadata && metadata.url == url) {
+      return metadata.data;
     }
-    browser._urlMetaData = { url, data: null };
+    MetadataCache.set(browser, { url, data: null });
 
     // Get the URL from the fixup service:
     let flags =
@@ -204,7 +207,7 @@
       }
       try {
         this._inGetUrlMetaData = true;
-        this.window.gBrowser.userTypedValue = null;
+        this.urlbarInput.browserManager.userTypedValue = null;
         this.urlbarInput.setURI(uriInfo.fixedURI);
         return this._getUrlMetaData();
       } finally {
@@ -212,14 +215,16 @@
       }
     }
 
-    return (browser._urlMetaData.data = {
+    metadata = {
       domain,
       origin: uriInfo.fixedURI.host,
       preDomain,
       schemeWSlashes,
       trimmedLength,
       url,
-    });
+    };
+    MetadataCache.set(browser, metadata);
+    return metadata;
   }
 
   _removeURLFormat() {
@@ -285,7 +290,7 @@
     if (
       this.urlbarInput.getAttribute("pageproxystate") == "valid" &&
       url.startsWith("https:") &&
-      this.window.gBrowser.securityUI.state &
+      this.urlbarInput.browserManager.selectedBrowser.securityUIState &
         Ci.nsIWebProgressListener.STATE_LOADED_MIXED_ACTIVE_CONTENT
     ) {
       let range = this.document.createRange();
diff --git a/browser/components/urlbar/content/standalone-urlbar.css b/browser/components/urlbar/content/standalone-urlbar.css
new file mode 100644
--- /dev/null
+++ b/browser/components/urlbar/content/standalone-urlbar.css
@@ -0,0 +1,28 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+%define urlbarBreakoutExtend 2px
+
+%include ../../../themes/shared/urlbar-searchbar.inc.css
+%include ../../../themes/shared/urlbarView.inc.css
+%include ../../../themes/shared/browser-custom-colors.inc.css
+
+:root {
+  --identity-box-margin-inline: 4px;
+  --identity-box-label-opacity: .8;
+
+  --urlbar-min-height: 32px;
+  --urlbar-icon-padding: 6px;
+}
+
+#urlbar-container {
+  display: inline-block;
+  width: 500px;
+  margin: 1em;
+}
+
+toolbar {
+  display: inline-block;
+  height: 40px;
+}
diff --git a/browser/components/urlbar/content/standalone-urlbar.xhtml b/browser/components/urlbar/content/standalone-urlbar.xhtml
new file mode 100644
--- /dev/null
+++ b/browser/components/urlbar/content/standalone-urlbar.xhtml
@@ -0,0 +1,54 @@
+<?xml version="1.0"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
+   - You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<?xml-stylesheet href="chrome://global/skin/global.css"?>
+
+<?xml-stylesheet href="chrome://global/skin/in-content/common.css"?>
+<?xml-stylesheet href="chrome://browser/skin/searchbar.css" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/content/urlbar/standalone-urlbar.css" type="text/css"?>
+
+<html
+  xmlns="http://www.w3.org/1999/xhtml"
+  xmlns:html="http://www.w3.org/1999/xhtml"
+  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+  height="600"
+  width="600"
+  lwtheme-mozlightdark="" style="--lwt-accent-color:rgb(28, 27, 34); --lwt-text-color:rgba(251, 251, 254); --arrowpanel-background:rgb(66, 65, 77); --panel-disabled-color:rgba(251, 251, 254, 0.5); --panel-description-color:rgba(251, 251, 254, 0.7); --arrowpanel-color:rgba(251, 251, 254, 1); --arrowpanel-border-color:rgb(82, 82, 94); --lwt-toolbar-field-background-color:rgb(28, 27, 34); --lwt-toolbar-field-color:rgba(251, 251, 254, 1); --lwt-toolbar-field-border-color:rgba(0, 0, 0, 0); --lwt-toolbar-field-focus:rgba(66, 65, 77, 1); --lwt-toolbar-field-focus-color:rgba(251, 251, 254, 1); --lwt-tab-text:rgb(251, 251, 254); --toolbar-bgcolor:rgba(43, 42, 51, 1); --toolbar-color:rgb(251, 251, 254); --chrome-content-separator-color:rgb(12, 12, 13); --toolbarbutton-icon-fill:rgb(251, 251, 254); --lwt-selected-tab-background-color:rgb(66, 65, 77); --autocomplete-popup-background:rgb(66, 65, 77); --autocomplete-popup-color:rgb(251, 251, 254); --autocomplete-popup-highlight-background:rgb(43, 42, 51); --button-bgcolor:rgb(43, 42, 51); --button-hover-bgcolor:rgb(82, 82, 94); --button-active-bgcolor:rgb(91, 91, 102); --buttons-primary-button-bgcolor:rgb(0, 221, 255); --buttons-primary-button-hover-bgcolor:rgb(128, 235, 255); --buttons-primary-button-active-bgcolor:rgb(170, 242, 255); --buttons-primary-button-color:rgb(43, 42, 51); --checkbox-border-color:rgb(143, 143, 157); --checkbox-unchecked-bgcolor:rgb(43, 42, 51); --checkbox-unchecked-hover-bgcolor:rgb(82, 82, 94); --checkbox-unchecked-active-bgcolor:rgb(91, 91, 102); --checkbox-checked-bgcolor:rgb(0, 221, 255); --checkbox-checked-color:rgb(43, 42, 51); --checkbox-checked-hover-bgcolor:rgb(128, 235, 255); --checkbox-checked-active-bgcolor:rgb(170, 242, 255); --error-text-color:rgb(255, 154, 162); --input-bgcolor:rgb(66, 65, 77); --input-color:rgb(191, 191, 201); --input-border-color:rgb(143, 143, 157); --input-error-border-color:rgb(255, 132, 138); --zoom-controls-bgcolor:rgb(74, 74, 85); --autocomplete-popup-separator-color:rgb(82, 82, 94); --panel-banner-item-update-supported-bgcolor:rgb(84, 255, 189); --panel-banner-item-warning-icon-bgcolor:rgb(255, 189, 79); --panel-banner-item-info-icon-bgcolor:rgb(128, 235, 255); --arrowpanel-dimmed:color-mix(in srgb, currentColor 9%, transparent); --arrowpanel-dimmed-further:color-mix(in srgb, currentColor 14%, transparent); --arrowpanel-dimmed-even-further:color-mix(in srgb, currentColor 25%, transparent);" lwthemetextcolor="bright" lwt-popup-brighttext="true" lwt-toolbar-field-brighttext="true" lwt-toolbar-field-focus-brighttext="true" lwtheme="true" lwt-default-theme-in-dark-mode="true"
+>
+<head>
+  <title>Test:Urlbar</title>
+  <link rel="localization" href="browser/browser.ftl"/>
+</head>
+
+<html:body>
+  <toolbar>
+    #include ../../../base/content/browser-urlbar.inc
+  </toolbar>
+</html:body>
+
+<script>
+  const { UrlbarInput } = ChromeUtils.import(
+    "resource:///modules/UrlbarInput.jsm"
+  );
+
+  /**
+   * Create an awesomebar.
+   */
+  class AwesomeBar extends UrlbarInput {
+    constructor() {
+      super({
+        textbox: document.getElementById("urlbar"),
+        eventTelemetryCategory: "urlbar",
+      });
+    }
+  }
+
+  Object.defineProperty(window, "gURLBar", {
+    value: new AwesomeBar(),
+    configurable: true,
+    enumerable: true,
+  });
+</script>
+
+</html>
diff --git a/browser/components/urlbar/jar.mn b/browser/components/urlbar/jar.mn
--- a/browser/components/urlbar/jar.mn
+++ b/browser/components/urlbar/jar.mn
@@ -6,3 +6,6 @@
    content/browser/urlbar/quicksuggestOnboarding.xhtml (content/quicksuggestOnboarding.xhtml)
    content/browser/urlbar/quicksuggestOnboarding.js    (content/quicksuggestOnboarding.js)
    content/browser/urlbar/quicksuggestOnboarding.css   (content/quicksuggestOnboarding.css)
+
+*  content/browser/urlbar/standalone-urlbar.xhtml      (content/standalone-urlbar.xhtml)
+*  content/browser/urlbar/standalone-urlbar.css        (content/standalone-urlbar.css)
diff --git a/browser/components/urlbar/tests/browser/browser.ini b/browser/components/urlbar/tests/browser/browser.ini
--- a/browser/components/urlbar/tests/browser/browser.ini
+++ b/browser/components/urlbar/tests/browser/browser.ini
@@ -252,6 +252,7 @@
   searchSuggestionEngine2.xml
   searchSuggestionEngine.sjs
 [browser_speculative_connect_not_with_client_cert.js]
+[browser_standalone_urlbar.js]
 [browser_stop.js]
 skip-if = os == 'mac' # macosx1014 fails due to 1485288
 [browser_stop_pending.js]
diff --git a/browser/components/urlbar/tests/browser/browser_standalone_urlbar.js b/browser/components/urlbar/tests/browser/browser_standalone_urlbar.js
new file mode 100644
--- /dev/null
+++ b/browser/components/urlbar/tests/browser/browser_standalone_urlbar.js
@@ -0,0 +1,39 @@
+/* Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+XPCOMUtils.defineLazyModuleGetters(this, {
+  UrlbarTestUtils: "resource://testing-common/UrlbarTestUtils.jsm",
+  UrlbarUtils: "resource:///modules/UrlbarUtils.jsm",
+});
+
+add_task(async function test_basic() {
+  let win = Services.ww.openWindow(
+    null,
+    "chrome://browser/content/urlbar/standalone-urlbar.xhtml",
+    "_blank",
+    "chrome,all,dialog=yes,resizable=yes,toolbar=yes",
+    null
+  );
+  await new Promise(resolve => {
+    win.addEventListener("load", resolve, { once: true });
+  });
+
+  await UrlbarTestUtils.promiseAutocompleteResultPopup({
+    window: win,
+    value: "http://example.com",
+    waitForFocus: SimpleTest.waitForFocus,
+  });
+
+  let result = await UrlbarTestUtils.getDetailsOfResultAt(win, 0);
+  is(
+    result.type,
+    UrlbarUtils.RESULT_TYPE.URL,
+    "First result is to navigate to the URL"
+  );
+
+  await UrlbarTestUtils.promisePopupClose(win);
+
+  win.close();
+});
diff --git a/browser/themes/shared/identity-block/identity-block.inc.css b/browser/themes/shared/identity-block/identity-block.inc.css
--- a/browser/themes/shared/identity-block/identity-block.inc.css
+++ b/browser/themes/shared/identity-block/identity-block.inc.css
@@ -95,8 +95,7 @@
 
 #identity-box[pageproxystate="valid"].notSecureText #identity-icon-label,
 #identity-box[pageproxystate="valid"].chromeUI #identity-icon-label,
-#identity-box[pageproxystate="valid"].extensionPage #identity-icon-label,
-.urlbar-label {
+#identity-box[pageproxystate="valid"].extensionPage #identity-icon-label {
   opacity: var(--identity-box-label-opacity);
 }
 
@@ -106,15 +105,13 @@
 
 #identity-box[pageproxystate="valid"].notSecureText,
 #identity-box[pageproxystate="valid"].chromeUI,
-#identity-box[pageproxystate="valid"].extensionPage,
-#urlbar-label-box {
+#identity-box[pageproxystate="valid"].extensionPage {
   margin-inline-end: 8px;
 }
 
 #identity-box[pageproxystate="valid"].notSecureText > .identity-box-button,
 #identity-box[pageproxystate="valid"].chromeUI > .identity-box-button,
-#identity-box[pageproxystate="valid"].extensionPage > .identity-box-button,
-#urlbar-label-box {
+#identity-box[pageproxystate="valid"].extensionPage > .identity-box-button {
   padding-inline: 8px;
   border-radius: var(--urlbar-icon-border-radius);
 }
@@ -122,8 +119,7 @@
 @media (-moz-proton) {
 #identity-box[pageproxystate="valid"].notSecureText > .identity-box-button,
 #identity-box[pageproxystate="valid"].chromeUI > .identity-box-button,
-#identity-box[pageproxystate="valid"].extensionPage > .identity-box-button,
-#urlbar-label-box {
+#identity-box[pageproxystate="valid"].extensionPage > .identity-box-button {
   background-color: var(--urlbar-box-bgcolor);
 }
 
@@ -155,10 +151,11 @@
 @media not (-moz-proton) {
 #identity-box[pageproxystate="valid"].notSecureText,
 #identity-box[pageproxystate="valid"].chromeUI,
-#identity-box[pageproxystate="valid"].extensionPage,
-#urlbar-label-box {
+#identity-box[pageproxystate="valid"].extensionPage {
   border-inline-end: 1px solid var(--autocomplete-popup-separator-color);
   border-image: linear-gradient(transparent 15%, var(--autocomplete-popup-separator-color) 15%, var(--autocomplete-popup-separator-color) 85%, transparent 85%);
+  border-inline-end: 1px solid var(--urlbar-separator-color);
+  border-image: linear-gradient(transparent 15%, var(--urlbar-separator-color) 15%, var(--urlbar-separator-color) 85%, transparent 85%);
   border-image-slice: 1;
 }
 
@@ -181,11 +178,7 @@
 #urlbar[searchmode]:not([breakout-extend]) > #urlbar-input-container > #urlbar-label-box:-moz-locale-dir(rtl) {
   border-image-width: 0 0 0 1px;
 }
-}/*** END !proton ***/
-
-.urlbar-label {
-  margin: 0;
-}
+} /*** END !proton ***/
 
 .sharing-icon,
 #identity-icon,
diff --git a/browser/themes/shared/urlbar-searchbar.inc.css b/browser/themes/shared/urlbar-searchbar.inc.css
--- a/browser/themes/shared/urlbar-searchbar.inc.css
+++ b/browser/themes/shared/urlbar-searchbar.inc.css
@@ -904,3 +904,137 @@
   opacity: 0.69;
 }
 } /*** END !proton ***/
+
+/* Align URLs to the right in RTL mode. */
+#urlbar-input:-moz-locale-dir(rtl) {
+  text-align: right !important;
+}
+
+/* Make sure that the location bar's alignment changes according
+   to the input box direction if the user switches the text direction using
+   cmd_switchTextDirection (which applies a dir attribute to the <input>). */
+#urlbar-input[dir=ltr]:-moz-locale-dir(rtl) {
+  text-align: left !important;
+}
+
+#urlbar-input[dir=rtl]:-moz-locale-dir(ltr) {
+  text-align: right !important;
+}
+
+/* Show the url scheme in a static box when overflowing to the left */
+.urlbar-input-box {
+  position: relative;
+  direction: ltr;
+}
+
+#urlbar-scheme {
+  position: absolute;
+  height: 100%;
+  visibility: hidden;
+  direction: ltr;
+  pointer-events: none;
+}
+
+#urlbar-input {
+  mask-repeat: no-repeat;
+  unicode-bidi: plaintext;
+  text-align: match-parent;
+}
+
+#urlbar:not([focused])[domaindir="ltr"]> #urlbar-input-container > .urlbar-input-box > #urlbar-input {
+  direction: ltr;
+  unicode-bidi: embed;
+}
+
+/* The following rules apply overflow masks to the unfocused urlbar
+   This mask may be overriden when a Contextual Feature Recommendation is shown,
+   see browser/themes/shared/urlbar-searchbar.inc.css for details */
+
+#urlbar:not([focused])[textoverflow="both"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
+  mask-image: linear-gradient(to right, transparent, black 3ch, black calc(100% - 3ch), transparent);
+}
+#urlbar:not([focused])[textoverflow="right"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
+  mask-image: linear-gradient(to left, transparent, black 3ch);
+}
+#urlbar:not([focused])[textoverflow="left"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
+  mask-image: linear-gradient(to right, transparent, black 3ch);
+}
+
+/* The protocol is visible if there is an RTL domain and we overflow to the left.
+   Uses the required-valid trick to check if it contains a value */
+#urlbar:not([focused])[textoverflow="left"][domaindir="rtl"] > #urlbar-input-container > .urlbar-input-box > #urlbar-scheme:valid {
+  visibility: visible;
+}
+#urlbar:not([focused])[textoverflow="left"][domaindir="rtl"] > #urlbar-input-container > .urlbar-input-box > #urlbar-input {
+  mask-image: linear-gradient(to right, transparent var(--urlbar-scheme-size), black calc(var(--urlbar-scheme-size) + 3ch));
+}
+
+/* Apply crisp rendering for favicons at exactly 2dppx resolution */
+@media (resolution: 2dppx) {
+  .searchbar-engine-image {
+    image-rendering: -moz-crisp-edges;
+  }
+}
+
+#urlbar[actiontype="switchtab"][actionoverride] > #urlbar-input-container > #urlbar-label-box,
+#urlbar:not([actiontype="switchtab"], [actiontype="extension"], [searchmode]) > #urlbar-input-container > #urlbar-label-box,
+#urlbar:not([actiontype="switchtab"]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-switchtab,
+#urlbar:not([actiontype="extension"]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-extension,
+#urlbar[searchmode][breakout-extend] > #urlbar-input-container > #urlbar-label-box,
+#urlbar:not([searchmode]) > #urlbar-input-container > #urlbar-label-box > #urlbar-label-search-mode,
+#urlbar[breakout-extend] > #urlbar-input-container > #urlbar-label-box > #urlbar-label-search-mode,
+#urlbar:not([usertyping]) > #urlbar-input-container > #urlbar-go-button,
+#urlbar:not([focused]) > #urlbar-input-container > #urlbar-go-button {
+  display: none;
+}
+
+.search-one-offs[compact=true] .search-setting-button,
+.search-one-offs:not([compact=true]) .search-setting-button-compact {
+  display: none;
+}
+
+.urlbar-label {
+  opacity: var(--identity-box-label-opacity);
+}
+
+#urlbar-label-box {
+  margin-inline-end: 8px;
+}
+
+#urlbar-label-box {
+  padding-inline: 8px;
+  border-radius: var(--toolbarbutton-border-radius);
+}
+
+@supports -moz-bool-pref("browser.proton.urlbar.enabled") {
+#urlbar-label-box {
+  background-color: var(--urlbar-box-bg-overlay);
+}
+} /*** END proton ***/
+
+@supports not -moz-bool-pref("browser.proton.urlbar.enabled") {
+#urlbar-label-box {
+  border-inline-end: 1px solid var(--urlbar-separator-color);
+  border-image: linear-gradient(transparent 15%, var(--urlbar-separator-color) 15%, var(--urlbar-separator-color) 85%, transparent 85%);
+  border-image-slice: 1;
+}
+
+#urlbar-label-box {
+  padding-inline: 4px;
+  border-inline-start: 1px solid var(--urlbar-separator-color);
+  border-radius: 0;
+}
+
+#urlbar[searchmode]:not([breakout-extend]) > #urlbar-input-container > #urlbar-label-box {
+  border-inline-start-color: transparent;
+  border-image-width: 0 1px 0 0;
+}
+
+#urlbar[searchmode]:not([breakout-extend]) > #urlbar-input-container > #urlbar-label-box:-moz-locale-dir(rtl) {
+  border-image-width: 0 0 0 1px;
+}
+}/*** END !proton ***/
+
+.urlbar-label {
+  margin: 0;
+}

