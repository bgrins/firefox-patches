diff --git a/browser/components/newtab/test/xpcshell/test_AboutNewTab.js b/browser/components/newtab/test/xpcshell/test_AboutNewTab.js
--- a/browser/components/newtab/test/xpcshell/test_AboutNewTab.js
+++ b/browser/components/newtab/test/xpcshell/test_AboutNewTab.js
@@ -34,11 +34,13 @@
   "browser.tabs.remote.separatePrivilegedContentProcess";
 const ACTIVITY_STREAM_DEBUG_PREF = "browser.newtabpage.activity-stream.debug";
 const SIMPLIFIED_WELCOME_ENABLED_PREF = "browser.aboutwelcome.enabled";
+const NEWTAB_PREF = "browser.newtabpage.enabled";
 
 function cleanup() {
   Services.prefs.clearUserPref(SEPARATE_PRIVILEGED_CONTENT_PROCESS_PREF);
   Services.prefs.clearUserPref(ACTIVITY_STREAM_DEBUG_PREF);
   Services.prefs.clearUserPref(SIMPLIFIED_WELCOME_ENABLED_PREF);
+  Services.prefs.clearUserPref(NEWTAB_PREF);
   AboutNewTab.resetNewTabURL();
 }
 
@@ -357,3 +359,20 @@
 
   cleanup();
 });
+
+add_task(async function test_disabling_newtab() {
+  // Check disabling new tab also disables activity stream.
+  Services.prefs.setBoolPref(NEWTAB_PREF, false);
+  Assert.ok(
+    !AboutNewTab.activityStreamEnabled,
+    ".activityStreamEnabled should be disabled"
+  );
+
+  // Check enabling new tab also enables activity stream.
+  Services.prefs.setBoolPref(NEWTAB_PREF, true);
+  Assert.ok(
+    AboutNewTab.activityStreamEnabled,
+    ".activityStreamEnabled should be enabled."
+  );
+  cleanup();
+});
diff --git a/browser/modules/AboutNewTab.jsm b/browser/modules/AboutNewTab.jsm
--- a/browser/modules/AboutNewTab.jsm
+++ b/browser/modules/AboutNewTab.jsm
@@ -40,6 +40,7 @@
   _activityStreamEnabled: false,
   activityStream: null,
   activityStreamDebug: false,
+  browserReady: false,
 
   _newTabURL: ABOUT_URL,
   _newTabURLOverridden: false,
@@ -77,8 +78,21 @@
       }
     );
 
+    XPCOMUtils.defineLazyPreferenceGetter(
+      this,
+      "newTabPageEnabled",
+      "browser.newtabpage.enabled",
+      false,
+      (preference, previousValue, newValue) => {
+        if (newValue && this.browserReady) {
+          this.initializeActivityStream();
+        }
+        this.toggleActivityStream(newValue);
+      }
+    );
+
     // More initialization happens here
-    this.toggleActivityStream(true);
+    this.toggleActivityStream(this.newTabPageEnabled);
     this.initialized = true;
 
     if (this.isPageListenerOverridden) {
@@ -169,6 +183,15 @@
    * onBrowserReady - Continues the initialization of Activity Stream after browser is ready.
    */
   onBrowserReady() {
+    this.browserReady = true;
+    if (!this.newTabPageEnabled) {
+      // Don't bother initializing activity stream if new tab page is disabled.
+      return;
+    }
+    this.initializeActivityStream();
+  },
+
+  initializeActivityStream() {
     if (this.activityStream && this.activityStream.initialized) {
       return;
     }

