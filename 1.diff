# HG changeset patch
# Parent  53b4b785ae2a7f70257069e77b138fe36b53698a

diff --git a/browser/actors/ContentCacheChild.jsm b/browser/actors/ContentCacheChild.jsm
new file mode 100644
--- /dev/null
+++ b/browser/actors/ContentCacheChild.jsm
@@ -0,0 +1,65 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+var EXPORTED_SYMBOLS = ["ContentCacheChild"];
+
+const lazy = {};
+ChromeUtils.defineModuleGetter(
+  lazy,
+  "LanguageDetector",
+  "resource:///modules/translation/LanguageDetector.jsm"
+);
+
+/**
+ * Cache any content a user views in order to build a local searchable database.
+ */
+class ContentCacheChild extends JSWindowActorChild {
+  async handleEvent(event) {
+    if (event.originalTarget.defaultView != this.contentWindow) {
+      return;
+    }
+
+    switch (event.type) {
+      case "pageshow":
+        // TODO - Should we use the canonical URL here? For instance:
+        // https://en.wikipedia.org/wiki/Carnivorous is not canonical.
+        // It has a <link rel="canonical" href="https://en.wikipedia.org/wiki/Carnivore"/>
+        // The page replaces the URL with the /Carnivore link, so if you refresh the
+        // page you now get two entries. This could help de-duplicate URLs.
+        let url = String(this.document.location);
+        if (!url.startsWith("http://") && !url.startsWith("https://")) {
+          // Do not cache "about:" pages or others.
+          return;
+        }
+
+        const maxLength = 50 * 1024; // TODO - Decide on a limit here.
+        const encoder = Cu.createDocumentEncoder("text/plain");
+        encoder.init(this.document, "text/plain", encoder.SkipInvisibleContent);
+        const text = encoder.encodeToStringWithMaxLength(maxLength);
+
+        let locale = this.contentWindow.document.documentElement.lang;
+
+        // Attempt to detect the language.
+        if (text.length > 100) {
+          // TODO - This is duplicating the work of TranslationChild. Perhaps this could
+          // be smart enough to share the work?
+          const {
+            confident,
+            language,
+          } = await lazy.LanguageDetector.detectLanguage(text);
+          if (confident) {
+            locale = language;
+          }
+        }
+
+        this.sendAsyncMessage("ContentCache:AddPage", {
+          text,
+          url,
+          locale,
+        });
+        break;
+    }
+  }
+}
diff --git a/browser/actors/ContentCacheParent.jsm b/browser/actors/ContentCacheParent.jsm
new file mode 100644
--- /dev/null
+++ b/browser/actors/ContentCacheParent.jsm
@@ -0,0 +1,36 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+var EXPORTED_SYMBOLS = ["ContentCacheParent"];
+
+/**
+ * @typedef {Object} PageData
+ * @property {string} text
+ * @property {string} url
+ * @property {string} locale
+ */
+
+class ContentCacheParent extends JSWindowActorParent {
+  /**
+   * @param {{
+   *  name: "ContentCache",
+   *  data: PageData
+   * }} message
+   */
+  receiveMessage(message) {
+    switch (message.name) {
+      case "ContentCache:AddPage":
+        this.addPage(message.data);
+        break;
+    }
+  }
+
+  /**
+   * @param {PageData} pageData
+   */
+  addPage(pageData) {
+    console.log(`TODO: ContentCacheParent.addPage`, pageData);
+  }
+}
diff --git a/browser/actors/moz.build b/browser/actors/moz.build
--- a/browser/actors/moz.build
+++ b/browser/actors/moz.build
@@ -52,6 +52,8 @@ FINAL_TARGET_FILES.actors += [
     "BrowserTabChild.sys.mjs",
     "ClickHandlerChild.sys.mjs",
     "ClickHandlerParent.sys.mjs",
+    "ContentCacheChild.jsm",
+    "ContentCacheParent.jsm",
     "ContentSearchChild.sys.mjs",
     "ContentSearchParent.sys.mjs",
     "ContextMenuChild.sys.mjs",
diff --git a/browser/components/BrowserGlue.sys.mjs b/browser/components/BrowserGlue.sys.mjs
--- a/browser/components/BrowserGlue.sys.mjs
+++ b/browser/components/BrowserGlue.sys.mjs
@@ -457,6 +457,20 @@ let JSWINDOWACTORS = {
     allFrames: true,
   },
 
+  ContentCache: {
+    parent: {
+      moduleURI: "resource:///actors/ContentCacheParent.jsm",
+    },
+    child: {
+      moduleURI: "resource:///actors/ContentCacheChild.jsm",
+      events: {
+        pageshow: {},
+        load: { mozSystemGroup: true, capture: true },
+      },
+    },
+    enablePreference: "browser.contentCache.enabled",
+  },
+
   ContentSearch: {
     parent: {
       esModuleURI: "resource:///actors/ContentSearchParent.sys.mjs",
diff --git a/modules/libpref/init/all.js b/modules/libpref/init/all.js
--- a/modules/libpref/init/all.js
+++ b/modules/libpref/init/all.js
@@ -2072,6 +2072,8 @@ pref("dom.ipc.keepProcessesAlive.privile
 // Disable support for SVG
 pref("svg.disabled", false);
 
+pref("browser.contentCache.enabled", true);
+
 // Disable e10s for Gecko by default. This is overridden in firefox.js.
 pref("browser.tabs.remote.autostart", false);
 
