# HG changeset patch
# Parent  cff0d905c02f82eb855c7de33f440b5d10db8b11

diff --git a/browser/actors/BrowserTabChild.jsm b/browser/actors/BrowserTabChild.jsm
--- a/browser/actors/BrowserTabChild.jsm
+++ b/browser/actors/BrowserTabChild.jsm
@@ -8,6 +8,25 @@ var EXPORTED_SYMBOLS = ["BrowserTabChild
 
 const { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
 
+const { XPCOMUtils } = ChromeUtils.import(
+  "resource://gre/modules/XPCOMUtils.jsm"
+);
+
+XPCOMUtils.defineLazyModuleGetters(this, {
+  AsyncShutdown: "resource://gre/modules/AsyncShutdown.jsm",
+  OS: "resource://gre/modules/osfile.jsm",
+  Services: "resource://gre/modules/Services.jsm",
+
+  UnsupportedError: "chrome://remote/content/cdp/Error.jsm",
+});
+
+console.log(OS.Constants.Path.localProfileDir);
+
+const WIREFRAME_DIR = OS.Path.join(
+  OS.Constants.Path.localProfileDir,
+  "wireframes"
+);
+
 ChromeUtils.defineModuleGetter(
   this,
   "E10SUtils",
@@ -42,6 +61,64 @@ class BrowserTabChild extends JSWindowAc
         }
         this.handledFirstPaint = true;
         this.sendAsyncMessage("Browser:FirstPaint", {});
+
+        // const localFilePath = OS.Path.join(WIREFRAME_DIR, filename);
+
+        // copy(JSON.stringify(temp0.ownerDocument.getWireframe()))
+        // console.log(this.browsingContext.currentWindowGlobal.document.getWireframe());
+        // await OS.File.writeAtomic(manifestPath, JSON.stringify(manifest));
+        // console.log(this.browsingContext.currentWindowGlobal);
+        // console.log(this.browsingContext.currentWindowGlobal.document.getWireframe());
+
+        break;
+
+      case "load":
+        console.log(this.browsingContext.docShell);
+        console.log(this.browsingContext.currentURI.asciiHost);
+        let doc = this.browsingContext.docShell.document;
+        let wireframe = doc.getWireframe();
+
+
+        console.log(wireframe);
+        const localFilePath = OS.Path.join(WIREFRAME_DIR, "foo.json");
+        OS.File.writeAtomic(localFilePath, JSON.stringify(wireframe));
+        try {
+          OS.File.makeDir(WIREFRAME_DIR);
+        } catch(e) {}
+
+
+        // let canvas = doc.createElementNS(
+        //   "http://www.w3.org/1999/xhtml",
+        //   "html:canvas"
+        // );
+        // let context = canvas.getContext("2d");
+        // let width = dimensions.innerWidth;
+        // let height = dimensions.innerHeight;
+        // if (fullWidth) {
+        //   width += dimensions.scrollMaxX - dimensions.scrollMinX;
+        // }
+        // if (fullHeight) {
+        //   height += dimensions.scrollMaxY - dimensions.scrollMinY;
+        // }
+        // canvas.width = width;
+        // canvas.height = height;
+        // let rect = new DOMRect(0, 0, width, height);
+    
+        // let snapshot = await browser.browsingContext.currentWindowGlobal.drawSnapshot(
+        //   rect,
+        //   1,
+        //   "rgb(255, 255, 255)"
+        // );
+        // context.drawImage(snapshot, 0, 0);
+    
+        // snapshot.close();
+    
+        // this.browsingContext.currentWindowGlobal.drawSnapshot(
+        //   rect,
+        //   scale,
+        //   backgroundColor
+        // let screenshotPath = OS.Path.join(WIREFRAME_DIR, "screenshot.png");
+
         break;
     }
   }
diff --git a/browser/components/BrowserGlue.jsm b/browser/components/BrowserGlue.jsm
--- a/browser/components/BrowserGlue.jsm
+++ b/browser/components/BrowserGlue.jsm
@@ -380,6 +380,7 @@ let JSWINDOWACTORS = {
       events: {
         DOMDocElementInserted: {},
         MozAfterPaint: {},
+        load: { mozSystemGroup: true, capture: true },
       },
     },
 
