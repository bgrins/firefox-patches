# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1660671120 25200
#      Tue Aug 16 10:32:00 2022 -0700
# Node ID 52579c33ced5a17576ddee735e94ba283c26c441
# Parent  020fc676eb89c74f5642618c69266a6112932958
Bug 1692124 - Proof of concept - guess userContextId for externally opened urls

This isn't intended to land, but it shows a demo of opening the right URL based on
the userContextId of currently opened tabs with the same host.

Differential Revision: https://phabricator.services.mozilla.com/D154812

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6219,6 +6219,9 @@ nsBrowserAccess.prototype = {
   ) {
     var browsingContext = null;
     var isExternal = !!(aFlags & Ci.nsIBrowserDOMWindow.OPEN_EXTERNAL);
+    var defaultUserContextId =
+      (isExternal && BrowserWindowTracker.guessUserContextId(aURI)) ||
+      Ci.nsIScriptSecurityManager.DEFAULT_USER_CONTEXT_ID;
 
     if (aOpenWindowInfo && isExternal) {
       Cu.reportError(
@@ -6324,7 +6327,7 @@ nsBrowserAccess.prototype = {
         let forceNotRemote = aOpenWindowInfo && !aOpenWindowInfo.isRemote;
         let userContextId = aOpenWindowInfo
           ? aOpenWindowInfo.originAttributes.userContextId
-          : Ci.nsIScriptSecurityManager.DEFAULT_USER_CONTEXT_ID;
+          : defaultUserContextId;
         let browser = this._openURIInNewTab(
           aURI,
           referrerInfo,
diff --git a/browser/modules/BrowserWindowTracker.jsm b/browser/modules/BrowserWindowTracker.jsm
--- a/browser/modules/BrowserWindowTracker.jsm
+++ b/browser/modules/BrowserWindowTracker.jsm
@@ -231,4 +231,47 @@ const BrowserWindowTracker = {
   untrackForTestsOnly(window) {
     return WindowHelper.removeWindow(window);
   },
+
+  // Proof of concept for https://bugzilla.mozilla.org/show_bug.cgi?id=1692124.
+  // TODO - put this somewhere else. The fact that it currently can only query open
+  // windows isn't intended after we have history visits tagged with usercontext id
+  guessUserContextId(aURI) {
+    let tabs = [];
+    for (let win of BrowserWindowTracker.orderedWindows) {
+      for (let tab of win.gBrowser.visibleTabs) {
+        tabs.push({
+          currentURI: tab.linkedBrowser.currentURI,
+          userContextId: tab.userContextId,
+        });
+      }
+    }
+    let matchingContainers = new Map();
+    for (let { currentURI, userContextId } of tabs) {
+      let currentURIHost = null;
+      try {
+        currentURIHost = currentURI.host;
+      } catch (e) {}
+      // TODO - maybe if it matches the full URL it should be a large bonus to the score
+      // compared with only matching host
+      if (currentURIHost == aURI.host) {
+        if (!matchingContainers.has(userContextId)) {
+          matchingContainers.set(userContextId, 0);
+        }
+        matchingContainers.set(
+          userContextId,
+          matchingContainers.get(userContextId) + 1
+        );
+      }
+    }
+
+    let guessedUserContextId = null;
+    let maxCount = 0;
+    for (let [userContextId, count] of matchingContainers.entries()) {
+      if (count > maxCount) {
+        guessedUserContextId = userContextId;
+        maxCount = count;
+      }
+    }
+    return guessedUserContextId;
+  },
 };
