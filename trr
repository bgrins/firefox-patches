# HG changeset patch
# Parent  0cb5037fb92acffee15d0eb8aff546c603a81c36

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -9940,3 +9940,58 @@ var ConfirmationHint = {
     }
   },
 };
+
+// TODO do this whole thing properly:
+//   - do we have a notification for currentTrrConfirmationState changes?
+//   - listen to notifcations for nsINetworkConnectivityService changes
+//   - add CTAs to dismiss notification for this session and/or permanently
+//   - add a preference / about:preferences ui for the ui
+// STR:
+//   ./mach run --temp-profile --setpref network.trr.mode=2 --setpref network.trr.uri="https://somewhere.nowhere/" http://google.com
+//   about:preferences -> change trr to https://mozilla.cloudflare-dns.com/dns-query
+function removeNotification() {
+  let notification = gNotificationBox.getNotificationWithValue("test-trr");
+  notification?.remove();
+}
+function addNotification() {
+  if (gNotificationBox.getNotificationWithValue("test-trr")) {
+    return;
+  }
+  gNotificationBox.appendNotification(
+    "test-trr",
+    {
+      label: "online w/ no trr",
+      priority: gNotificationBox.PRIORITY_INFO_HIGH,
+      eventCallback: event => {},
+    },
+    []
+  );
+}
+setInterval(() => {
+  // https://searchfox.org/mozilla-central/source/netwerk/test/unit/test_network_connectivity_service.js#
+  // https://searchfox.org/mozilla-central/source/netwerk/docs/dns/dns-over-https-trr.rst#69
+  // https://searchfox.org/mozilla-central/source/netwerk/test/unit/test_trr_confirmation.js#28
+
+  const CONFIRM_OFF = 0;
+  const CONFIRM_TRYING_OK = 1;
+  const CONFIRM_OK = 2;
+  const CONFIRM_FAILED = 3;
+  const CONFIRM_TRYING_FAILED = 4;
+  const CONFIRM_DISABLED = 5;
+  const ncs = Cc[
+    "@mozilla.org/network/network-connectivity-service;1"
+  ].getService(Ci.nsINetworkConnectivityService);
+  const dns = Cc["@mozilla.org/network/dns-service;1"].getService(
+    Ci.nsIDNSService
+  );
+  // console.log(dns.currentTrrConfirmationState, ncs.IPv4, ncs.DNSv4);
+  let trrIsProbablyDown =
+    dns.currentTrrConfirmationState == CONFIRM_TRYING_FAILED ||
+    dns.currentTrrConfirmationState == CONFIRM_FAILED;
+  let internetIsProbablyUp = ncs.IPv4 == Ci.nsINetworkConnectivityService.OK;
+  if (trrIsProbablyDown && internetIsProbablyUp) {
+    addNotification();
+  } else {
+    removeNotification();
+  }
+}, 100);
