# HG changeset patch
# Parent  e8bfcd70e6ba5c6b9a6cc94e1a61b46d3f8949f8

diff --git a/security/manager/ssl/AppSignatureVerification.cpp b/security/manager/ssl/AppSignatureVerification.cpp
--- a/security/manager/ssl/AppSignatureVerification.cpp
+++ b/security/manager/ssl/AppSignatureVerification.cpp
@@ -629,11 +629,15 @@ nsresult VerifyCertificate(Span<const ui
   if (result != Success) {
     return mozilla::psm::GetXPCOMFromNSSError(MapResultToPRErrorCode(result));
   }
+  const Time JUNE_21_2030 = TimeFromEpochInSeconds(1908310555);
+  // Monday, June 3, 2024 4:00:00 PM GMT
+  const Time JUNE_3_2024 = TimeFromEpochInSeconds(1717430400);
 
   result = BuildCertChain(
-      trustDomain, certDER, Now(), EndEntityOrCA::MustBeEndEntity,
+      trustDomain, certDER, JUNE_3_2024, EndEntityOrCA::MustBeEndEntity,
       KeyUsage::digitalSignature, KeyPurposeId::id_kp_codeSigning,
       CertPolicyId::anyPolicy, nullptr /*stapledOCSPResponse*/);
+
   if (result == mozilla::pkix::Result::ERROR_EXPIRED_CERTIFICATE ||
       result == mozilla::pkix::Result::ERROR_NOT_YET_VALID_CERTIFICATE) {
     // For code-signing you normally need trusted 3rd-party timestamps to
@@ -655,9 +659,11 @@ nsresult VerifyCertificate(Span<const ui
     //  * mozilla::pkix returns "expired" when there are "worse" problems
     //    with the certificate or chain.
     // (see bug 1267318)
+    printf("VerifyCertificate: BuildCertChain failed with %d but we are setting to success\n", result);
     result = Success;
   }
   if (result != Success) {
+    printf("VerifyCertificate: BuildCertChain failed with %d\n", result);
     return mozilla::psm::GetXPCOMFromNSSError(MapResultToPRErrorCode(result));
   }
 
